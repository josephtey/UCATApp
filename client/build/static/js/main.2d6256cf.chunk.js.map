{"version":3,"sources":["serviceWorker.js","api/db.js","utils/helpers.js","constants/marking_scheme.js","actions/session.js","reducers/session.js","actions/content.js","reducers/content.js","actions/auth.js","reducers/auth.js","store.js","components/Shared/Loading.js","screens/Home.js","components/Shared/Elements.js","screens/Exam.js","components/Session/BottomBar.js","components/Session/TopBarSecondary.js","components/Calculator/calculator.js","components/Session/Question.js","components/Session/Answer.js","components/Session/ReviewCards.js","components/Session/Review.js","constants/section_descriptions.js","components/Session/Start.js","components/Session/Results.js","screens/Session.js","screens/Login.js","screens/Practice.js","screens/PracticeTopic.js","components/Header/NavBar.js","screens/Import.js","App.js","index.js","assets/in2medlogo.png"],"names":["Boolean","window","location","hostname","match","db","axios","create","baseURL","db_getAllExams","type","a","get","response","data","db_getExamDetail","structure_id","toString","db_getSectionDetail","section_id","db_getQuestionDetail","question_id","db_createSession","student_id","put","db_updateSession","session_id","fields","post","db_updateSessionTime","db_findSession","db_getAllStructureSessions","headers","db_createResponse","value","correct","flagged","points","stem_id","timestamp","Date","getTime","db_updateResponse","response_id","db_createBareResponse","db_flagResponse","db_findResponse","db_findStem","db_getAllSectionResponses","group_id","db_getAllSessionResponses","db_userExists","username","db_createUser","display_name","roles","wp_authenticate","email","password","db_createQuestion","options","question","answer","explanation","difficulty","image","option_images","category_id","db_createStem","text","question_order","layout","db_updateStem","db_createSection","name","description","time","db_createExam","section_order","import_questions","stems","stem","stemQuestionOrder","console","log","createdStem","questions","indexOf","join","createdQuestion","push","updatedStem","import_exam","sectionOrder","sections","section","sectionQuestionOrder","createdSection","exam","createdExam","db_getCompletedQuestions","db_getCategoryQuestions","db_getCategories","db_getCategoryDetail","db_getCategorySessions","db_updateReviewSession","show","useDidMountEffect","func","deps","didMount","useRef","useEffect","current","filterResponses","responses","property","filteredResponses","i","length","setCookie","days","expires","date","setTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","c","charAt","substring","quantitative_reasoning_scheme","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","abstract_reasoning_scheme","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","verbal_reasoning_scheme","decision_making_scheme","createResponseRequest","createResponseSuccess","newResponse","createResponseError","error","createResponse","dispatch","selectedOptions","correctOptions","count","answerIndex","valueIndex","flagResponseRequest","flagResponseSuccess","flagResponse","getSessionDetailsRequest","getSessionDetailsSuccess","sessionDetails","sessionResponses","currentSection","currentStructure","currentQuestion","mode","allSections","currentStem","currentQuestionOrder","getSessionDetailsError","nextSectionRequest","nextSectionSuccess","updatedSession","nextSection","details","updatedSession2","getSectionRequest","getSectionSuccess","getSessionResponsesRequest","getSessionResponses","createSessionRequest","createSessionSuccess","currentSession","getQuestionDetailRequest","getQuestionDetailSuccess","questionDetail","getQuestionDetailError","getQuestionDetail","reviewSectionRequest","reviewSectionSuccess","reviewSection","stopSectionStartRequest","stopSectionStartSuccess","reviewQuestionsRequest","reviewQuestionsError","finishSessionRequest","finishSessionSuccess","finishedSession","finishSession","examDetail","scoreBreakdown","score","allSessionResponses","sectionResponses","filter","item","numCorrect","numIncorrect","numPartial","scoreSum","Math","round","reduce","prev","cur","sectionDetail","completed","score_breakdown","startPracticeRequest","startPracticeSuccess","startPracticeError","initialState","isCreatingSession","isFetchingResponses","isCreatingResponse","isFetchingSession","isFetchingQuestionDetail","isFinishingSession","isUpdatingSession","isFlagging","getAllExamsRequest","getAllExamsSuccess","allExams","getAllExams","getExamDetailRequest","getExamDetailSuccess","getStructureSessionsRequest","getCategoriesRequest","getCategoriesSuccess","categories","getCategoryDetailRequest","getCategoryDetailSuccess","categoryDetail","isFetchingExams","isFetchingExamDetail","isFetchingSectionDetail","isFetchingSessions","isFetchingCategories","structureSessions","jwt","require","initUserRequest","initUserSuccess","userData","initUserError","isCreatingUser","createStore","combineReducers","content","state","action","isFetchingCategoryDetail","session","isStartingPractice","sessionResponse","isReviewingSection","updatedQuestionOrder","auth","applyMiddleware","thunk","logger","CenteredDiv","styled","div","props","duringSession","Loading","color","height","width","mapDispatchToProps","Title","Container","ExamList","CardHeading","CardLength","CardTop","CardBottom","Button","Card","SectionTitle","connect","history","pathname","SectionMocks","examList","topic","map","includes","key","onClick","toLowerCase","size","ThemedModal","button","body","heading","onClickNo","useState","isOpen","setIsOpen","ThemedModalContainer","ModalHeader","style","cursor","ModalBody","ModalText","ModalButtons","ModalButton","label","ButtonPrimary","ButtonSecondary","RadioBox","defaultValue","images","selectedOption","setSelectedOption","RadioElements","RadioOption","RadioCircle","RadioContent","RadioBoxImage","src","Box","useDrag","collect","monitor","isDragging","drag","opacity","DraggableItem","ref","Dustbin","lastDroppedItem","onDrop","useDrop","accept","drop","isOver","canDrop","DragAndDropAnswer","dropped","DragAndDrop","dustbins","generateDustbins","setDustbins","handleDrop","useCallback","index","updatedDustbins","update","$set","dustbinArr","convertDustbinsToString","DragAndDropBigContainer","DragAndDropOptions","DragAndDropContainer","DragAndDropOption","DraggableItems","DragAndDropReview","correctValue","selectedValue","DragAndDropResult","RadioBoxAnswer","Content","Result","Text","NoSelectionText","FlagButton","isFlagged","setFlagged","FlagContainer","DraggableWindow","setClose","children","title","Window","WindowHeader","img","getExamDetail","resetExamDetail","createSession","getStructureSessions","sessions","SectionCard","sectionName","questionCount","status","className","CardLeft","CardTime","CardInfo","CardTitle","Caption","CardRight","PastSessions","Sections","PreHeading","Header","HeaderLeft","HeaderRight","OrangeLink","params","sectionStartTime","sectionEndTime","start_time","end_time","timeLeft","sectionTime","startTime","calculateTimeLeft","toLocaleDateString","BottomBar","leftContent","rightContent","BottomBarInner","BottomBarLeft","BottomBarRight","TopBarSecondary","TopBarInner","TopBarLeft","TopBarRight","Calculator","id","class","isHydrating","Border","MainContent","QuestionContent","QuestionStem","QuestionStemText","QuestionStemImage","QuestionImage","LinkLeft","LinkRight","TopLink","calculatorModalIsOpen","setCalculatorModalIsOpen","scratchpadModalIsOpen","setScratchpadModalIsOpen","rows","cols","find","para","show_review","currentQuestionId","currentQuestionIndex","nextQuestion","slice","changeMode","customStyles","top","left","right","bottom","margin","transform","Modal","setAppElement","ExplanationContent","ExplanationText","ExplanationTitle","ModalTitle","CloseButton","explanationModalIsOpen","setExplanationModalIsOpen","onRequestClose","ReviewCards","QuestionCards","answered","stopReview","reviewQuestions","Description","incompleteQuestions","questionExists","j","getIncompleteQuestions","flaggedQuestions","currentSectionId","currentSectionIndex","descriptions","stopSectionStart","WelcomeMessage","UCATLogo","Info","Warning","DescriptionTitle","returnHome","getSection","resetSection","SectionHeader","SectionScore","SectionBox","keyMap","SHOW_CALCULATOR","PREVIOUS_QUESTION","sequence","FLAG_QUESTION","NEXT_QUESTION","sequences","getSessionDetails","currentIndex","resetSessionDetail","Timer","startTimestamp","sectionTimeLength","onFinished","timeRemaining","secondsRemaining","floor","toFixed","setTimeLeft","timerStop","setTimerStop","timer","setTimeout","clearTimeout","SessionContainer","TopBar","handlers","allowChanges","alert","initUser","success","userInfo","decode","userExists","token","sign","LoadingContainer","LoginLogo","LoginBox","ErrorMessage","setUsername","setPassword","loading","setLoading","setAuthenticated","Logo","placeholder","onChange","e","target","getCategories","PracticeSection","category","getCategoryDetail","categorySessions","categoryQuestions","completedCategoryQuestions","totalQuestions","totalCompletedQuestions","Set","JSON","stringify","parse","startPractice","question_length","completedQuestions","allQuestions","some","questionOrder","resetCategoryDetail","convertArrToOptions","arr","perstem","DropdownMenu","CardSubtitle","numberOfQuestions","setNumberOfQuestions","marginTop","isSearchable","intervals","per_stem","toLocaleTimeString","Object","keys","logoutUser","NavItem","active","Nav","UserInfo","visible","setVisible","LogoImage","ImportButton","CardList","examData","setExamData","questionData","setQuestionData","event","reader","FileReader","onload","obj","result","readAsText","files","getUser","authenticated","theme","render","path","component","Session","Exam","PracticeTopic","Practice","Import","ReactDOM","store","DndProvider","backend","HTML5Backend","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.2d6256cf.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\nimport ExampleExam from '../constants/example_exam.json'\n\nconst db = axios.create({\n  // baseURL: 'http://ec2-3-26-34-195.ap-southeast-2.compute.amazonaws.com:3000'\n  baseURL: 'http://ec2-3-26-34-195.ap-southeast-2.compute.amazonaws.com:3000'\n});\n\nexport const db_getAllExams = async (type) => {\n  const response = await db.get('/structures/type/' + type)\n\n  return response.data\n}\n\n\nexport const db_getExamDetail = async (structure_id) => {\n  const response = await db.get('/structures/' + structure_id.toString())\n  return response.data\n}\n\nexport const db_getSectionDetail = async (section_id) => {\n  const response = await db.get('/sections/' + section_id.toString())\n\n  return response.data\n}\n\nexport const db_getQuestionDetail = async (question_id) => {\n  const response = await db.get('/questions/' + question_id.toString())\n\n  return response.data\n}\n\nexport const db_createSession = async (structure_id, student_id) => {\n  const response = await db.put('/sessions/', {\n    structure_id,\n    student_id\n  })\n\n  return response.data\n}\n\nexport const db_updateSession = async (session_id, fields) => {\n  const response = await db.post('/sessions/' + session_id.toString(), fields)\n\n  return response.data\n}\n\nexport const db_updateSessionTime = async (session_id, type) => {\n  const response = await db.post('/sessions/' + session_id.toString() + '/time', {\n    type\n  })\n\n  return response.data\n}\n\nexport const db_findSession = async (session_id) => {\n  const response = await db.get('/sessions/' + session_id.toString())\n\n  return response.data\n}\n\n\nexport const db_getAllStructureSessions = async (structure_id, student_id) => {\n  const response = await db.get('/sessions/structure/' + structure_id.toString(), {\n    headers: {\n      student_id\n    }\n  })\n\n  return response.data\n}\n\n\nexport const db_createResponse = async (session_id, question_id, student_id, section_id, value, correct, flagged, points, stem_id) => {\n  const response = await db.put('/responses/', {\n    session_id,\n    student_id,\n    question_id,\n    section_id,\n    value,\n    timestamp: new Date().getTime().toString(),\n    correct,\n    flagged,\n    points,\n    stem_id\n  })\n\n  return response.data\n}\nexport const db_updateResponse = async (response_id, value, correct, points) => {\n  const response = await db.post('/responses/' + response_id.toString(), {\n    value,\n    correct,\n    points\n  })\n\n  return response.data\n}\n\nexport const db_createBareResponse = async (session_id, question_id, student_id, section_id, flagged) => {\n  const response = await db.put('/responses/bare', {\n    session_id,\n    student_id,\n    question_id,\n    section_id,\n    timestamp: new Date().getTime().toString(),\n    flagged\n  })\n\n  return response.data\n\n}\n\nexport const db_flagResponse = async (response_id, flagged) => {\n  const response = await db.post('/responses/' + response_id.toString() + '/flag', {\n    flagged\n  })\n\n  return response.data\n}\n\nexport const db_findResponse = async (session_id, question_id) => {\n  const response = await db.post('/responses/find', {\n    session_id,\n    question_id\n  })\n\n  return response.data\n}\n\nexport const db_findStem = async (stem_id) => {\n  const response = await db.get('/stems/' + stem_id.toString())\n\n  return response.data\n}\n\nexport const db_getAllSectionResponses = async (session_id, section_id) => {\n  const response = await db.post('/responses/session/' + session_id.toString(), {\n    type: \"section\",\n    group_id: section_id\n  })\n\n  return response.data\n}\n\nexport const db_getAllSessionResponses = async (session_id) => {\n  const response = await db.post('/responses/session/' + session_id.toString(), {\n    type: \"structure\"\n  })\n\n  return response.data\n}\n\n\nexport const db_userExists = async (username) => {\n  const response = await db.get('/users/' + username)\n\n  return response.data\n}\n\nexport const db_createUser = async (username, display_name, roles) => {\n  const response = await db.post('/users', {\n    username,\n    display_name,\n    roles\n  })\n\n  return response.data\n}\n\nexport const wp_authenticate = async (email, password) => {\n  const response = await db.post(`https://in2med.com.au/?rest_route=/simple-jwt-login/v1/auth`, {\n    email,\n    password\n  })\n\n  return response.data\n}\n\nexport const db_createQuestion = async (type,\n  options,\n  question,\n  answer,\n  explanation,\n  difficulty,\n  image,\n  option_images,\n  stem_id,\n  category_id) => {\n\n\n  const response = await db.put(`/questions`, {\n    type,\n    options,\n    question,\n    answer,\n    explanation,\n    difficulty,\n    image,\n    option_images,\n    stem_id,\n    category_id\n  })\n\n  return response.data\n}\n\nexport const db_createStem = async (text, question_order, image, category_id, type, layout) => {\n\n  const response = await db.put(`/stems`, {\n    text, question_order, image, category_id, type, layout\n  })\n\n  return response.data\n}\n\nexport const db_updateStem = async (stem_id, question_order) => {\n  const response = await db.post(`/stems/` + stem_id.toString(), {\n    question_order\n  })\n\n  return response.data\n}\n\nexport const db_createSection = async (\n  name,\n  description,\n  question_order,\n  time\n) => {\n\n  const response = await db.put(`/sections`, {\n    name,\n    description,\n    question_order,\n    time\n  })\n\n  return response.data\n}\n\nexport const db_createExam = async (\n  name,\n  description,\n  type,\n  section_order,\n  time,\n  category_id = null\n) => {\n\n  const response = await db.put(`/structures`, {\n    name,\n    description,\n    type,\n    section_order,\n    time,\n    category_id\n  })\n\n  return response.data\n}\n\nexport const import_questions = async (data) => {\n  try {\n    for (const stem of data.stems) {\n      let stemQuestionOrder = []\n\n      // Create stem\n      console.log(\"ATTEMPTING TO CREATE STEM: \", stem)\n      let createdStem = await db_createStem(\n        stem.text ? stem.text : null,\n        null,\n        stem.image ? stem.image : null,\n        stem.category_id ? stem.category_id : null,\n        \"Bank\",\n        stem.layout ? stem.layout : null,\n      )\n\n      console.log(\"CREATED STEM: \", createdStem)\n\n      for (const question of stem.questions) {\n\n        // Create questions\n        console.log(\"ATTEMPTING TO CREATE QUESTION: \", question)\n\n        const options = [\"A\", \"B\", \"C\", \"D\"]\n        let createdQuestion = await db_createQuestion(\n          question.type == \"Multiple Choice\" ? \"MC\" : question.type == \"Drag and Drop\" ? \"DD\" : question.type == \"Multiple Choice (SJ)\" ? \"MCSJ\" : \"\",\n          question.options,\n          question.text ? question.text : null,\n          question.type == \"Multiple Choice\" || question.type == \"Multiple Choice (SJ)\" ? question.options[options.indexOf(question.answer)] : question.answer.join(\";\"),\n          question.explanation ? question.explanation : null,\n          question.difficulty ? question.difficulty : null,\n          question.image ? question.image : null,\n          question.option_images ? question.option_images : null,\n          createdStem.stem_id,\n          question.category_id ? question.category_id : stem.category_id\n        )\n\n        console.log(\"CREATED QUESTION: \", createdQuestion)\n\n        // Append question id to question_order\n        stemQuestionOrder.push(createdQuestion.question_id)\n      }\n\n      console.log(\"UPDATING STEM: \", stemQuestionOrder)\n      let updatedStem = await db_updateStem(createdStem.stem_id, stemQuestionOrder)\n      console.log(\"UPDATED STEM: \", updatedStem)\n    }\n\n    return \"Success\"\n  } catch (err) {\n    console.log(err)\n    return \"Failed\"\n  }\n\n}\nexport const import_exam = async (data) => {\n\n  try {\n    let sectionOrder = []\n    for (const section of data.sections) {\n      let sectionQuestionOrder = []\n\n      for (const stem of section.stems) {\n        let stemQuestionOrder = []\n\n        // Create stem\n        console.log(\"ATTEMPTING TO CREATE STEM: \", stem)\n        let createdStem = await db_createStem(\n          stem.text ? stem.text : null,\n          null,\n          stem.image ? stem.image : null,\n          stem.category_id ? stem.category_id : null,\n          \"Exam\",\n          stem.layout ? stem.layout : null,\n        )\n\n        console.log(\"CREATED STEM: \", createdStem)\n\n        for (const question of stem.questions) {\n\n          // Create questions\n          console.log(\"ATTEMPTING TO CREATE QUESTION: \", question)\n\n          const options = [\"A\", \"B\", \"C\", \"D\"]\n          let createdQuestion = await db_createQuestion(\n            question.type == \"Multiple Choice\" ? \"MC\" : question.type == \"Drag and Drop\" ? \"DD\" : question.type == \"Multiple Choice (SJ)\" ? \"MCSJ\" : \"\",\n            question.options,\n            question.text ? question.text : null,\n            question.type == \"Multiple Choice\" || question.type == \"Multiple Choice (SJ)\" ? question.options[options.indexOf(question.answer)] : question.answer.join(\";\"),\n            question.explanation ? question.explanation : null,\n            question.difficulty ? question.difficulty : null,\n            question.image ? question.image : null,\n            question.option_images ? question.option_images : null,\n            createdStem.stem_id,\n            question.category_id ? question.category_id : stem.category_id\n          )\n\n          console.log(\"CREATED QUESTION: \", createdQuestion)\n\n          // Append question id to question_order\n          stemQuestionOrder.push(createdQuestion.question_id)\n          sectionQuestionOrder.push(createdQuestion.question_id)\n        }\n\n        console.log(\"UPDATING STEM: \", stemQuestionOrder)\n        let updatedStem = await db_updateStem(createdStem.stem_id, stemQuestionOrder)\n        console.log(\"UPDATED STEM: \", updatedStem)\n      }\n\n      // Create Section\n      console.log(\"ATTEMPTING TO CREATE SECTION: \", section)\n      let createdSection = await db_createSection(\n        section.name,\n        section.description ? section.description : null,\n        sectionQuestionOrder,\n        section.time ? section.time : null,\n      )\n\n      console.log(\"CREATED SECTION: \", createdSection)\n\n      // Append section orders\n      sectionOrder.push(createdSection.section_id)\n    }\n\n    // Create Exam!\n    console.log(\"ATTEMPTING TO CREATE SECTION: \", data.exam)\n    let createdExam = await db_createExam(\n      data.exam.name,\n      data.exam.description ? data.exam.description : null,\n      data.exam.type,\n      sectionOrder,\n      data.exam.time ? data.exam.time : null\n    )\n\n    console.log(\"CREATED EXAM: \", createdExam)\n\n    return \"Success\"\n\n  } catch (err) {\n    return \"Failed\"\n    console.log(err)\n  }\n}\n\nexport const db_getCompletedQuestions = async (category_id, student_id) => {\n  const response = await db.post(`/responses/find/completed`, {\n    student_id,\n    category_id\n  })\n\n  return response.data\n}\n\nexport const db_getCategoryQuestions = async (category_id) => {\n  const response = await db.get(`/stems/category/${category_id}`)\n\n  return response.data\n}\n\nexport const db_getCategories = async () => {\n  const response = await db.get(`/categories`)\n\n  return response.data\n}\n\nexport const db_getCategoryDetail = async (category_id) => {\n  const response = await db.get(`/categories/${category_id}`)\n\n  return response.data\n}\n\nexport const db_getCategorySessions = async (category_id, student_id) => {\n  const response = await db.post(`/sessions/category`, {\n    category_id,\n    student_id\n  })\n\n  return response.data\n}\n\nexport const db_updateReviewSession = async (session_id, show) => {\n  const response = await db.post(`/sessions/${session_id.toString()}/review`, {\n    show\n  })\n\n  return response.data\n}","import React, { useEffect, useRef } from 'react';\n\nexport const useDidMountEffect = (func, deps) => {\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) func();\n    else didMount.current = true;\n  }, deps);\n}\n\nexport const getIncompleteQuestions = (questions, responses) => {\n  let incompleteQuestions = []\n\n  for (let i = 0; i < questions.length; i++) {\n    let questionExists = false\n    for (let j = 0; j < responses.length; j++) {\n      if (responses[j].question_id === questions[i]) {\n        questionExists = true\n        break\n      }\n    }\n    if (!questionExists) {\n      incompleteQuestions.push(questions[i])\n    }\n  }\n\n  return incompleteQuestions\n}\n\nexport const filterResponses = (responses, property, value = true) => {\n  let filteredResponses = []\n\n  for (let i = 0; i < responses.length; i++) {\n    if (responses[i][property] === value) {\n      filteredResponses.push(responses[i].question_id)\n    }\n  }\n\n  return filteredResponses\n}\n\nexport const setCookie = (name, value, days) => {\n  var expires = \"\";\n  if (days) {\n    var date = new Date();\n    date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n}\nexport const getCookie = (name) => {\n  var nameEQ = name + \"=\";\n  var ca = document.cookie.split(';');\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n}\nexport const eraseCookie = (name) => {\n  document.cookie = name + '=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n}","export const quantitative_reasoning_section_name = \"Quantitative Reasoning\"\nexport const quantitative_reasoning_scheme = {\n  0: 300,\n  1: 300,\n  2: 300,\n  3: 300,\n  4: 350,\n  5: 370,\n  6: 350,\n  7: 370,\n  8: 400,\n  9: 430,\n  10: 450,\n  11: 470,\n  12: 500,\n  13: 530,\n  14: 550,\n  15: 550,\n  16: 570,\n  17: 570,\n  18: 600,\n  19: 600,\n  20: 630,\n  21: 630,\n  22: 650,\n  23: 650,\n  24: 670,\n  25: 700,\n  26: 730,\n  27: 750,\n  28: 770,\n  29: 800,\n  30: 830,\n  31: 850,\n  32: 850,\n  33: 870,\n  34: 870,\n  35: 900,\n  36: 900\n}\n\nexport const abstract_reasoning_section_name = \"Abstract Reasoning\"\nexport const abstract_reasoning_scheme = {\n  0: 300,\n  1: 300,\n  2: 300,\n  3: 300,\n  4: 300,\n  5: 300,\n  6: 300,\n  7: 350,\n  8: 350,\n  9: 350,\n  10: 350,\n  11: 370,\n  12: 370,\n  13: 400,\n  14: 400,\n  15: 430,\n  16: 430,\n  17: 450,\n  18: 450,\n  19: 470,\n  20: 470,\n  21: 500,\n  22: 500,\n  23: 530,\n  24: 530,\n  25: 550,\n  26: 550,\n  27: 570,\n  28: 570,\n  29: 570,\n  30: 600,\n  31: 600,\n  32: 600,\n  33: 630,\n  34: 630,\n  35: 650,\n  36: 650,\n  37: 670,\n  38: 700,\n  39: 700,\n  40: 730,\n  41: 730,\n  42: 750,\n  43: 750,\n  44: 770,\n  45: 770,\n  46: 800,\n  47: 800,\n  48: 830,\n  49: 830,\n  50: 850,\n  51: 850,\n  52: 870,\n  53: 870,\n  54: 900,\n  55: 900\n}\n\nexport const verbal_reasoning_section_name = \"Verbal Reasoning\"\nexport const verbal_reasoning_scheme = {\n  0: 300,\n  1: 300,\n  2: 300,\n  3: 300,\n  4: 300,\n  5: 300,\n  6: 350,\n  7: 350,\n  8: 370,\n  9: 400,\n  10: 400,\n  11: 430,\n  12: 430,\n  13: 450,\n  14: 450,\n  15: 470,\n  16: 500,\n  17: 530,\n  18: 530,\n  19: 550,\n  20: 550,\n  21: 570,\n  22: 570,\n  23: 600,\n  24: 530,\n  25: 600,\n  26: 600,\n  27: 570,\n  28: 650,\n  29: 670,\n  30: 670,\n  31: 700,\n  32: 730,\n  33: 750,\n  34: 770,\n  35: 800,\n  36: 800,\n  37: 830,\n  38: 830,\n  39: 850,\n  40: 850,\n  41: 870,\n  42: 870,\n  43: 900,\n  44: 900\n}\n\nexport const decision_making_section_name = \"Decision Making\"\nexport const decision_making_scheme = {\n  0: 300,\n  1: 300,\n  2: 300,\n  3: 300,\n  4: 350,\n  5: 350,\n  6: 350,\n  7: 370,\n  8: 400,\n  9: 430,\n  10: 450,\n  11: 470,\n  12: 500,\n  13: 530,\n  14: 550,\n  15: 550,\n  16: 570,\n  17: 600,\n  18: 630,\n  19: 650,\n  20: 670,\n  21: 700,\n  22: 730,\n  23: 750,\n  24: 770,\n  25: 800,\n  26: 830,\n  27: 850,\n  28: 870,\n  29: 900\n}\n\n\n","import {\n  db_createSession,\n  db_getAllSectionResponses,\n  db_getAllSessionResponses,\n  db_createResponse,\n  db_findSession,\n  db_getSectionDetail,\n  db_getExamDetail,\n  db_getQuestionDetail,\n  db_findResponse,\n  db_updateResponse,\n  db_updateSession,\n  db_updateSessionTime,\n  db_flagResponse,\n  db_createBareResponse,\n  db_findStem,\n  db_getCompletedQuestions,\n  db_getCategoryQuestions,\n  db_createSection,\n  db_createExam,\n  db_updateReviewSession\n} from '../api/db';\nimport { filterResponses } from '../utils/helpers'\nimport {\n  quantitative_reasoning_section_name,\n  quantitative_reasoning_scheme,\n  abstract_reasoning_section_name,\n  abstract_reasoning_scheme,\n  verbal_reasoning_section_name,\n  verbal_reasoning_scheme,\n  decision_making_section_name,\n  decision_making_scheme\n} from '../constants/marking_scheme'\n\nexport const CREATE_RESPONSE_REQUEST = 'CREATE_RESPONSE_REQUEST';\nexport const CREATE_RESPONSE_SUCCESS = 'CREATE_RESPONSE_SUCCESS';\nexport const CREATE_RESPONSE_ERROR = 'CREATE_RESPONSE_ERROR';\n\nconst createResponseRequest = { type: CREATE_RESPONSE_REQUEST };\nconst createResponseSuccess = (newResponse) => ({ type: CREATE_RESPONSE_SUCCESS, newResponse });\nconst createResponseError = error => ({ type: CREATE_RESPONSE_ERROR, error });\n\nexport const createResponse = (session_id, question_id, student_id, section_id, value, answer, type, stem_id, options = null) => async dispatch => {\n  dispatch(createResponseRequest);\n  try {\n\n    const response = await db_findResponse(session_id, question_id)\n    const correct = value === answer ? true : false\n\n    let points\n    if (type == \"MC\") {\n      points = value === answer ? 1 : 0\n\n    } else if (type == \"DD\") {\n      let selectedOptions = value.split(\";\")\n      let correctOptions = answer.split(\";\")\n      let count = 0\n      for (let i = 0; i < selectedOptions.length; i++) {\n        if (selectedOptions[i] == correctOptions[i]) {\n          count += 1\n        }\n      }\n      if (count === 4) {\n        points = 0.5\n      } else if (count === 5) {\n        points = 1\n      } else {\n        points = 0\n      }\n    } else if (type == \"MCSJ\") {\n      if (value === answer) {\n        points = 1\n      } else {\n        const answerIndex = options.indexOf(answer)\n        const valueIndex = options.indexOf(value)\n        const assoc = {\n          0: 1,\n          1: 0,\n          2: 3,\n          3: 2\n        }\n\n        if (assoc[valueIndex] === answerIndex) {\n          points = 0.5\n        } else {\n          points = 0\n        }\n      }\n    }\n\n\n    let newResponse;\n    if (response) {\n      newResponse = await db_updateResponse(response.response_id, value, correct, points)\n    } else {\n      newResponse = await db_createResponse(session_id, question_id, student_id, section_id, value, correct, false, points, stem_id)\n    }\n\n    dispatch(createResponseSuccess(newResponse))\n\n  } catch (error) {\n    dispatch(createResponseError(error));\n  }\n};\n\nexport const FLAG_RESPONSE_REQUEST = 'FLAG_RESPONSE_REQUEST';\nexport const FLAG_RESPONSE_SUCCESS = 'FLAG_RESPONSE_SUCCESS';\nexport const FLAG_RESPONSE_ERROR = 'FLAG_RESPONSE_ERROR';\n\nconst flagResponseRequest = { type: FLAG_RESPONSE_REQUEST };\nconst flagResponseSuccess = (newResponse) => ({ type: FLAG_RESPONSE_SUCCESS, newResponse });\nconst flagResponseError = error => ({ type: FLAG_RESPONSE_ERROR, error });\n\nexport const flagResponse = (session_id, question_id, student_id, section_id, flagged) => async dispatch => {\n  dispatch(flagResponseRequest);\n  try {\n\n    const response = await db_findResponse(session_id, question_id)\n\n    let newResponse;\n    if (response) {\n      newResponse = await db_flagResponse(response.response_id, flagged)\n    } else {\n      newResponse = await db_createBareResponse(session_id, question_id, student_id, section_id, flagged)\n    }\n\n    dispatch(flagResponseSuccess(newResponse))\n\n  } catch (error) {\n    dispatch(flagResponseError(error));\n  }\n};\n\n\n\nexport const GET_SESSION_DETAIL_REQUEST = 'GET_SESSION_DETAIL_REQUEST';\nexport const GET_SESSION_DETAIL_SUCCESS = 'GET_SESSION_DETAIL_SUCCESS';\nexport const GET_SESSION_DETAIL_ERROR = 'GET_SESSION_DETAIL_ERROR';\nexport const RESET_SESSION_DETAIL = 'RESET_SESSION_DETAIL';\n\nconst getSessionDetailsRequest = { type: GET_SESSION_DETAIL_REQUEST };\nconst getSessionDetailsSuccess = (sessionDetails, sessionResponses, currentSection, currentStructure, currentQuestion, mode, allSections, currentStem, currentQuestionOrder) => ({ type: GET_SESSION_DETAIL_SUCCESS, sessionDetails, sessionResponses, currentSection, currentStructure, currentQuestion, mode, allSections, currentStem, currentQuestionOrder });\nconst getSessionDetailsError = error => ({ type: GET_SESSION_DETAIL_ERROR, error });\n\nexport const getSessionDetails = (session_id, student_id) => async dispatch => {\n  dispatch(getSessionDetailsRequest);\n  try {\n    const sessionDetails = await db_findSession(session_id)\n    const currentStructure = await db_getExamDetail(sessionDetails.structure_id)\n\n    let currentSection, currentQuestion, mode, sessionResponses, currentStem, currentQuestionOrder;\n\n    if (sessionDetails.student_id === student_id) {\n\n      if (sessionDetails.completed === true) {\n\n        // Results mode\n        mode = \"results\"\n        sessionResponses = await db_getAllSessionResponses(session_id)\n\n      } else if (sessionDetails.start_time.length > 0) {\n\n        // Resuming progress\n        currentSection = currentStructure.sections.find(item => item.section_id === currentStructure.details.section_order[sessionDetails.end_time.length])\n        currentQuestionOrder = currentSection.question_order\n        sessionResponses = await db_getAllSectionResponses(sessionDetails.session_id, currentSection.section_id)\n\n        if (sessionResponses.length > 0) {\n          if (sessionResponses[0].question_id == currentSection.question_order.slice(-1)[0]) {\n            currentQuestion = await db_getQuestionDetail(sessionResponses[0].question_id)\n          } else {\n            const currentIndex = currentSection.question_order.indexOf(sessionResponses[0].question_id)\n            currentQuestion = await db_getQuestionDetail(currentSection.question_order[currentIndex + 1])\n          }\n\n          mode = \"question\"\n        } else {\n          currentQuestion = await db_getQuestionDetail(currentSection.question_order[0])\n\n          if (sessionDetails.start_time.length == sessionDetails.end_time.length) {\n            mode = \"start\"\n          } else {\n            mode = \"question\"\n          }\n        }\n\n        // Getting question stem\n        if (currentQuestion.stem_id) {\n          currentStem = await db_findStem(currentQuestion.stem_id)\n        }\n\n      } else {\n\n        // Starting a new session!\n        currentSection = currentStructure.sections[0]\n        currentQuestionOrder = currentSection.question_order\n        sessionResponses = await db_getAllSectionResponses(sessionDetails.session_id, currentSection.section_id)\n\n        console.log(\"currentSection\")\n        console.log(currentSection)\n\n        currentQuestion = await db_getQuestionDetail(currentSection.question_order[0])\n\n        // Getting question stem\n        if (currentQuestion.stem_id) {\n          currentStem = await db_findStem(currentQuestion.stem_id)\n        }\n        mode = \"start\"\n\n      }\n\n      dispatch(getSessionDetailsSuccess(sessionDetails, sessionResponses, currentSection, currentStructure.details, currentQuestion, mode, currentStructure.sections, currentStem, currentQuestionOrder))\n\n    } else {\n      dispatch(getSessionDetailsError(\"Failed authentication.\"));\n    }\n\n  } catch (error) {\n    dispatch(getSessionDetailsError(error));\n  }\n};\n\nexport const resetSessionDetail = () => {\n  return {\n    type: RESET_SESSION_DETAIL\n  }\n}\n\nexport const NEXT_SECTION_REQUEST = 'NEXT_SECTION_REQUEST';\nexport const NEXT_SECTION_SUCCESS = 'NEXT_SECTION_SUCCESS';\nexport const NEXT_SECTION_ERROR = 'NEXT_SECTION_ERROR';\n\nconst nextSectionRequest = { type: NEXT_SECTION_REQUEST };\nconst nextSectionSuccess = (sessionResponses, currentSection, currentQuestion, updatedSession, currentStem) => ({ type: NEXT_SECTION_SUCCESS, sessionResponses, currentSection, currentQuestion, updatedSession, currentStem });\nconst nextSectionError = error => ({ type: NEXT_SECTION_ERROR, error });\n\nexport const nextSection = (session_id, section_id) => async dispatch => {\n  dispatch(nextSectionRequest);\n  try {\n    const sessionResponses = await db_getAllSectionResponses(session_id, section_id)\n    const currentSection = await db_getSectionDetail(section_id)\n    const currentQuestion = await db_getQuestionDetail(currentSection.details.question_order[0])\n    let currentStem\n    if (currentQuestion.stem_id) {\n      currentStem = await db_findStem(currentQuestion.stem_id)\n    }\n    const updatedSession = await db_updateSessionTime(session_id, \"end\")\n    const updatedSession2 = await db_updateReviewSession(session_id, false)\n    dispatch(nextSectionSuccess(sessionResponses, currentSection.details, currentQuestion, updatedSession2, currentStem))\n\n  } catch (error) {\n    dispatch(nextSectionError(error));\n  }\n};\n\nexport const GET_SECTION_REQUEST = 'GET_SECTION_REQUEST';\nexport const GET_SECTION_SUCCESS = 'GET_SECTION_SUCCESS';\nexport const GET_SECTION_ERROR = 'GET_SECTION_ERROR';\nexport const RESET_SECTION = 'RESET_SECTION';\n\nconst getSectionRequest = { type: GET_SECTION_REQUEST };\nconst getSectionSuccess = (currentSection, currentQuestionOrder, currentQuestion, mode) => ({ type: GET_SECTION_SUCCESS, currentSection, currentQuestionOrder, currentQuestion, mode });\nconst getSectionError = error => ({ type: GET_SECTION_ERROR, error });\n\nexport const getSection = (section_id, questions, question_id) => async dispatch => {\n  dispatch(getSectionRequest);\n  try {\n    const currentSection = await db_getSectionDetail(section_id)\n    const currentQuestion = await db_getQuestionDetail(question_id)\n\n    dispatch(getSectionSuccess(currentSection.details, questions, currentQuestion, \"answer\"))\n\n  } catch (error) {\n    dispatch(getSectionError(error));\n  }\n};\n\nexport const resetSection = () => {\n  return {\n    type: RESET_SECTION\n  }\n}\n\n\nexport const GET_SESSION_RESPONSES_REQUEST = 'GET_SESSION_RESPONSES_REQUEST';\nexport const GET_SESSION_RESPONSES_SUCCESS = 'GET_SESSION_RESPONSES_SUCCESS';\nexport const GET_SESSION_RESPONSES_ERROR = 'GET_SESSION_RESPONSES_ERROR';\nexport const RESET_SESSION_RESPONSES = 'RESET_SESSION_RESPONSES';\n\nconst getSessionResponsesRequest = { type: GET_SESSION_RESPONSES_REQUEST };\nconst getSessionResponsesSuccess = (sessionResponses) => ({ type: GET_SESSION_RESPONSES_SUCCESS, sessionResponses });\nconst getSessionResponsesError = error => ({ type: GET_SESSION_RESPONSES_ERROR, error });\n\nexport const getSessionResponses = (session_id, type, group_id) => async dispatch => {\n  dispatch(getSessionResponsesRequest);\n  try {\n    let responses\n    if (type === \"section\") {\n      responses = await db_getAllSectionResponses(session_id, group_id)\n    } else if (type === \"structure\") {\n      responses = await db_getAllSessionResponses(session_id)\n    }\n\n    dispatch(getSessionResponsesSuccess(responses))\n\n  } catch (error) {\n    dispatch(getSessionResponsesError(error));\n  }\n};\n\nexport const resetSessionResponses = () => {\n  return { type: RESET_SESSION_RESPONSES }\n}\n\nexport const CREATE_SESSION_REQUEST = 'CREATE_SESSION_REQUEST';\nexport const CREATE_SESSION_SUCCESS = 'CREATE_SESSION_SUCCESS';\nexport const CREATE_SESSION_ERROR = 'CREATE_SESSION_ERROR';\n\nconst createSessionRequest = { type: CREATE_SESSION_REQUEST };\nconst createSessionSuccess = (currentSession) => ({ type: CREATE_SESSION_SUCCESS, currentSession });\nconst createSessionError = error => ({ type: CREATE_SESSION_ERROR, error });\n\nexport const createSession = (structure_id, student_id) => async dispatch => {\n  dispatch(createSessionRequest);\n  try {\n    const currentSession = await db_createSession(structure_id, student_id)\n    dispatch(createSessionSuccess(currentSession))\n\n  } catch (error) {\n    dispatch(createSessionError(error));\n  }\n};\n\nexport const GET_QUESTION_REQUEST = 'GET_QUESTION_REQUEST';\nexport const GET_QUESTION_SUCCESS = 'GET_QUESTION_SUCCESS';\nexport const GET_QUESTION_ERROR = 'GET_QUESTION_ERROR';\n\nconst getQuestionDetailRequest = { type: GET_QUESTION_REQUEST };\nconst getQuestionDetailSuccess = (questionDetail, currentStem, mode) => ({ type: GET_QUESTION_SUCCESS, questionDetail, currentStem, mode });\nconst getQuestionDetailError = error => ({ type: GET_QUESTION_ERROR, error });\n\nexport const getQuestionDetail = (question_id, mode = \"question\") => async dispatch => {\n  dispatch(getQuestionDetailRequest);\n  try {\n    const questionDetail = await db_getQuestionDetail(question_id)\n\n    let currentStem\n    if (questionDetail.stem_id) {\n      currentStem = await db_findStem(questionDetail.stem_id)\n    }\n\n    dispatch(getQuestionDetailSuccess(questionDetail, currentStem, mode))\n\n  } catch (error) {\n    dispatch(getQuestionDetailError(error));\n  }\n};\n\nexport const REVIEW_SECTION_REQUEST = 'REVIEW_SECTION_REQUEST';\nexport const REVIEW_SECTION_SUCCESS = 'REVIEW_SECTION_SUCCESS';\nexport const REVIEW_SECTION_ERROR = 'REVIEW_SECTION_ERROR';\n\nconst reviewSectionRequest = { type: REVIEW_SECTION_REQUEST };\nconst reviewSectionSuccess = (updatedSession) => ({ type: REVIEW_SECTION_SUCCESS, updatedSession });\nconst reviewSectionError = error => ({ type: REVIEW_SECTION_ERROR, error });\n\nexport const reviewSection = (session_id) => async dispatch => {\n  dispatch(reviewSectionRequest);\n  try {\n    const updatedSession = await db_updateReviewSession(session_id, true)\n    console.log(updatedSession)\n    dispatch(reviewSectionSuccess(updatedSession))\n\n  } catch (error) {\n    dispatch(reviewSectionError(error));\n  }\n};\n\n\nexport const STOP_REVIEW = 'STOP_REVIEW';\nexport const stopReview = () => {\n  return { type: STOP_REVIEW };\n}\n\nexport const START_SECTION = 'START_SECTION';\nexport const startSection = () => {\n  return { type: START_SECTION };\n}\n\nexport const STOP_SECTION_START_REQUEST = 'STOP_SECTION_START_REQUEST';\nexport const STOP_SECTION_START_SUCCESS = 'STOP_SECTION_START_SUCCESS';\nexport const STOP_SECTION_START_ERROR = 'STOP_SECTION_START_ERROR';\n\nconst stopSectionStartRequest = { type: STOP_SECTION_START_REQUEST };\nconst stopSectionStartSuccess = (updatedSession) => ({ type: STOP_SECTION_START_SUCCESS, updatedSession });\nconst stopSectionStartError = error => ({ type: STOP_SECTION_START_ERROR, error });\n\nexport const stopSectionStart = (session_id) => async dispatch => {\n  dispatch(stopSectionStartRequest);\n  try {\n    const updatedSession = await db_updateSessionTime(session_id, \"start\")\n    dispatch(stopSectionStartSuccess(updatedSession))\n\n  } catch (error) {\n    dispatch(stopSectionStartError(error));\n  }\n};\n\nexport const REVIEW_QUESTIONS_REQUEST = 'REVIEW_QUESTIONS_REQUEST';\nexport const REVIEW_QUESTIONS_SUCCESS = 'REVIEW_QUESTIONS_SUCCESS';\nexport const REVIEW_QUESTIONS_ERROR = 'REVIEW_QUESTIONS_ERROR';\n\nconst reviewQuestionsRequest = { type: REVIEW_QUESTIONS_REQUEST };\nconst reviewQuestionsSuccess = (updatedQuestionOrder) => ({ type: REVIEW_QUESTIONS_SUCCESS, updatedQuestionOrder });\nconst reviewQuestionsError = error => ({ type: REVIEW_QUESTIONS_ERROR, error });\n\nexport const reviewQuestions = (questions) => async dispatch => {\n  dispatch(reviewQuestionsRequest);\n  try {\n    dispatch(reviewQuestionsSuccess(questions))\n\n  } catch (error) {\n    dispatch(reviewQuestionsError(error));\n  }\n};\n\nexport const FINISH_SESSION_REQUEST = 'FINISH_SESSION_REQUEST';\nexport const FINISH_SESSION_SUCCESS = 'FINISH_SESSION_SUCCESS';\nexport const FINISH_SESSION_ERROR = 'FINISH_SESSION_ERROR';\n\nconst finishSessionRequest = { type: FINISH_SESSION_REQUEST };\nconst finishSessionSuccess = (finishedSession) => ({ type: FINISH_SESSION_SUCCESS, finishedSession });\nconst finishSessionError = error => ({ type: FINISH_SESSION_ERROR, error });\n\nexport const finishSession = (session_id, examDetail) => async dispatch => {\n  dispatch(finishSessionRequest);\n  try {\n\n    // Time\n    await db_updateSessionTime(session_id, \"end\")\n\n    // Score\n    let scoreBreakdown = {}\n    let score = 0\n    const allSessionResponses = await db_getAllSessionResponses(session_id)\n\n    for (let i = 0; i < examDetail.section_order.length; i++) {\n      let sectionResponses = allSessionResponses.filter(item => item.section_id === examDetail.section_order[i])\n      let numCorrect = filterResponses(sectionResponses, 'points', 1).length\n      let numIncorrect = filterResponses(sectionResponses, 'points', 0).length\n      let numPartial = filterResponses(sectionResponses, 'points', 0.5).length\n      let scoreSum = Math.round(sectionResponses.reduce(function (prev, cur) {\n        return prev + cur.points;\n      }, 0));\n\n      scoreBreakdown[examDetail.section_order[i]] = [numCorrect, numIncorrect, numPartial]\n      scoreBreakdown[examDetail.section_order[i].toString() + '_score'] = scoreSum\n\n      // Scaling stuff\n      let sectionDetail = await db_getSectionDetail(examDetail.section_order[i])\n\n      switch (sectionDetail.details.name) {\n        case quantitative_reasoning_section_name:\n          scoreBreakdown[examDetail.section_order[i].toString() + '_scaled'] = quantitative_reasoning_scheme[scoreSum]\n          break;\n        case abstract_reasoning_section_name:\n          scoreBreakdown[examDetail.section_order[i].toString() + '_scaled'] = abstract_reasoning_scheme[scoreSum]\n          break;\n        case decision_making_section_name:\n          scoreBreakdown[examDetail.section_order[i].toString() + '_scaled'] = decision_making_scheme[scoreSum]\n          break;\n        case verbal_reasoning_section_name:\n          scoreBreakdown[examDetail.section_order[i].toString() + '_scaled'] = verbal_reasoning_scheme[scoreSum]\n          break;\n        default:\n          scoreBreakdown[examDetail.section_order[i].toString() + '_scaled'] = scoreSum\n          break;\n      }\n\n      score += scoreBreakdown[examDetail.section_order[i].toString() + '_scaled']\n    }\n\n    const finishedSession = await db_updateSession(session_id, {\n      completed: true,\n      score,\n      score_breakdown: scoreBreakdown\n    })\n\n    dispatch(finishSessionSuccess(finishedSession))\n\n  } catch (error) {\n    dispatch(finishSessionError(error));\n  }\n};\n\nexport const CHANGE_MODE = 'CHANGE_MODE';\nexport const changeMode = (mode) => {\n  return {\n    type: CHANGE_MODE,\n    mode\n  }\n}\n\n\n\nexport const START_PRACTICE_REQUEST = 'START_PRACTICE_REQUEST';\nexport const START_PRACTICE_SUCCESS = 'START_PRACTICE_SUCCESS';\nexport const START_PRACTICE_ERROR = 'START_PRACTICE_ERROR';\n\nconst startPracticeRequest = { type: START_PRACTICE_REQUEST };\nconst startPracticeSuccess = (currentSession) => ({ type: START_PRACTICE_SUCCESS, currentSession });\nconst startPracticeError = error => ({ type: START_PRACTICE_ERROR, error });\n\nexport const startPractice = (category_id, topic, student_id, question_length) => async dispatch => {\n  dispatch(startPracticeRequest);\n  try {\n    const completedQuestions = await db_getCompletedQuestions(category_id, student_id)\n    const allQuestions = await db_getCategoryQuestions(category_id)\n    const incompleteQuestions = []\n\n    for (let i = 0; i < allQuestions.length; i++) {\n      if (!completedQuestions.some(({ stem_id }) => stem_id === allQuestions[i].stem_id)) {\n        incompleteQuestions.push(allQuestions[i].question_order)\n      }\n    }\n\n    console.log(incompleteQuestions)\n    if (incompleteQuestions.length >= question_length) {\n      let questionOrder = []\n      for (let i = 0; i < question_length; i++) {\n        questionOrder.push(...incompleteQuestions[i])\n      }\n\n      // Create new section\n      const createdSection = await db_createSection(\n        `${topic}: Practice Section`,\n        null,\n        questionOrder,\n        null,\n      )\n\n      console.log(\"Created Section: \", createdSection)\n\n      // Create a new structure\n      const createdExam = await db_createExam(\n        `${topic}: Practice Structure`,\n        null,\n        \"Practice\",\n        [createdSection.section_id],\n        null,\n        category_id\n      )\n\n      console.log(\"Created Structure: \", createdExam)\n\n      // Create the session!\n      const currentSession = await db_createSession(createdExam.structure_id, student_id)\n      dispatch(startPracticeSuccess(currentSession))\n\n    } else {\n      dispatch(startPracticeError(\"Insufficient questions left.\"));\n    }\n\n  } catch (error) {\n    dispatch(startPracticeError(error));\n  }\n};","import {\n  CREATE_SESSION_REQUEST,\n  CREATE_SESSION_SUCCESS,\n  CREATE_SESSION_ERROR,\n\n  START_PRACTICE_REQUEST,\n  START_PRACTICE_SUCCESS,\n  START_PRACTICE_ERROR,\n\n  GET_SESSION_RESPONSES_REQUEST,\n  GET_SESSION_RESPONSES_SUCCESS,\n  GET_SESSION_RESPONSES_ERROR,\n  RESET_SESSION_RESPONSES,\n\n  CREATE_RESPONSE_REQUEST,\n  CREATE_RESPONSE_SUCCESS,\n  CREATE_RESPONSE_ERROR,\n\n  GET_SESSION_DETAIL_REQUEST,\n  GET_SESSION_DETAIL_SUCCESS,\n  GET_SESSION_DETAIL_ERROR,\n  RESET_SESSION_DETAIL,\n\n  GET_SECTION_REQUEST,\n  GET_SECTION_SUCCESS,\n  GET_SECTION_ERROR,\n  RESET_SECTION,\n\n  GET_QUESTION_REQUEST,\n  GET_QUESTION_SUCCESS,\n  GET_QUESTION_ERROR,\n\n  NEXT_SECTION_REQUEST,\n  NEXT_SECTION_SUCCESS,\n  NEXT_SECTION_ERROR,\n\n  FINISH_SESSION_REQUEST,\n  FINISH_SESSION_SUCCESS,\n  FINISH_SESSION_ERROR,\n\n  REVIEW_SECTION_REQUEST,\n  REVIEW_SECTION_SUCCESS,\n  REVIEW_SECTION_ERROR,\n  STOP_REVIEW,\n\n  STOP_SECTION_START_REQUEST,\n  STOP_SECTION_START_SUCCESS,\n  STOP_SECTION_START_ERROR,\n\n  REVIEW_QUESTIONS_REQUEST,\n  REVIEW_QUESTIONS_SUCCESS,\n  REVIEW_QUESTIONS_ERROR,\n\n  FLAG_RESPONSE_REQUEST,\n  FLAG_RESPONSE_SUCCESS,\n  FLAG_RESPONSE_ERROR,\n\n  START_SECTION,\n  CHANGE_MODE\n} from '../actions/session'\n\nconst initialState = {\n  isCreatingSession: false,\n  isFetchingResponses: false,\n  isCreatingResponse: false,\n  isFetchingSession: false,\n  isFetchingQuestionDetail: false,\n  isFinishingSession: false,\n  isUpdatingSession: false,\n  isFlagging: false,\n  mode: \"question\",\n  error: null,\n  currentSession: null,\n  currentQuestion: null,\n  currentStructure: null,\n  currentSection: null,\n  currentStem: null,\n  sessionResponses: [],\n  newResponse: null,\n  allSections: [],\n  currentQuestionOrder: []\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_SESSION_REQUEST:\n      return { ...state, isCreatingSession: true }\n    case CREATE_SESSION_SUCCESS:\n      return { ...state, isCreatingSession: false, currentSession: action.currentSession }\n    case CREATE_SESSION_ERROR:\n      return { ...state, isCreatingSession: false, error: action.error }\n\n    case START_PRACTICE_REQUEST:\n      return { ...state, isStartingPractice: true }\n    case START_PRACTICE_SUCCESS:\n      return { ...state, isStartingPractice: false, currentSession: action.currentSession }\n    case START_PRACTICE_ERROR:\n      return { ...state, isStartingPractice: false, error: action.error }\n\n    case GET_SESSION_RESPONSES_REQUEST:\n      return { ...state, isFetchingResponses: true }\n    case GET_SESSION_RESPONSES_SUCCESS:\n      return { ...state, isFetchingResponses: false, sessionResponses: action.sessionResponses }\n    case GET_SESSION_RESPONSES_ERROR:\n      return { ...state, isFetchingResponses: false, error: action.error }\n    case RESET_SESSION_RESPONSES:\n      return { ...state, sessionResponse: [] }\n\n    case CREATE_RESPONSE_REQUEST:\n      return { ...state, isCreatingResponse: true }\n    case CREATE_RESPONSE_SUCCESS:\n      return { ...state, isCreatingResponse: false, newResponse: action.newResponse }\n    case CREATE_RESPONSE_ERROR:\n      return { ...state, isCreatingResponse: false, error: action.error }\n\n    case FLAG_RESPONSE_REQUEST:\n      return { ...state, isFlagging: true }\n    case FLAG_RESPONSE_SUCCESS:\n      return { ...state, isFlagging: false, newResponse: action.newResponse }\n    case FLAG_RESPONSE_ERROR:\n      return { ...state, isFlagging: false, error: action.error }\n\n    case GET_QUESTION_REQUEST:\n      return { ...state, isFetchingQuestionDetail: true }\n    case GET_QUESTION_SUCCESS:\n      return { ...state, isFetchingQuestionDetail: false, currentQuestion: action.questionDetail, currentStem: action.currentStem, mode: action.mode }\n    case GET_QUESTION_ERROR:\n      return { ...state, isFetchingQuestionDetail: false, error: action.error }\n\n    case GET_SESSION_DETAIL_REQUEST:\n      return { ...state, isFetchingSession: true }\n    case GET_SESSION_DETAIL_SUCCESS:\n      return { ...state, isFetchingSession: false, mode: action.mode, currentSession: action.sessionDetails, sessionResponses: action.sessionResponses, currentStructure: action.currentStructure, currentSection: action.currentSection, currentQuestionOrder: action.currentQuestionOrder, currentQuestion: action.currentQuestion, allSections: action.allSections, currentStem: action.currentStem }\n    case GET_SESSION_DETAIL_ERROR:\n      return { ...state, isFetchingSession: false, error: action.error }\n    case RESET_SESSION_DETAIL:\n      return { ...state, sessionResponses: [], currentSession: null, currentStructure: null, currentSection: null, currentQuestion: null, finishedSession: null, mode: \"question\" }\n\n    case NEXT_SECTION_REQUEST:\n      return { ...state, isFetchingSession: true }\n    case NEXT_SECTION_SUCCESS:\n      return { ...state, isFetchingSession: false, mode: \"start\", sessionResponses: action.sessionResponses, currentSection: action.currentSection, currentQuestionOrder: action.currentSection.question_order, currentQuestion: action.currentQuestion, currentSession: action.updatedSession, currentStem: action.currentStem }\n    case NEXT_SECTION_ERROR:\n      return { ...state, isFetchingSession: false, error: action.error }\n\n    case GET_SECTION_REQUEST:\n      return { ...state, isFetchingSession: true }\n    case GET_SECTION_SUCCESS:\n      return { ...state, isFetchingSession: false, currentSection: action.currentSection, currentQuestionOrder: action.currentQuestionOrder, currentQuestion: action.currentQuestion, mode: action.mode }\n    case GET_SECTION_ERROR:\n      return { ...state, isFetchingSession: false, error: action.error }\n    case RESET_SECTION:\n      return { ...state, currentSection: null, currentQuestionOrder: null }\n\n    case FINISH_SESSION_REQUEST:\n      return { ...state, isFinishingSession: true }\n    case FINISH_SESSION_SUCCESS:\n      return { ...state, isFinishingSession: false, mode: \"results\", currentSession: action.finishedSession }\n    case FINISH_SESSION_ERROR:\n      return { ...state, isFinishingSession: false, error: action.error }\n\n    case REVIEW_SECTION_REQUEST:\n      return { ...state, isReviewingSection: true }\n    case REVIEW_SECTION_SUCCESS:\n      return { ...state, isReviewingSection: false, currentSession: action.updatedSession, mode: \"review\" }\n    case REVIEW_SECTION_ERROR:\n      return { ...state, isReviewingSection: false, error: action.error }\n    case STOP_REVIEW:\n      return { ...state, mode: \"question\" }\n\n    case STOP_SECTION_START_REQUEST:\n      return { ...state, isUpdatingSession: true }\n    case STOP_SECTION_START_SUCCESS:\n      return { ...state, isUpdatingSession: false, mode: \"question\", currentSession: action.updatedSession }\n    case STOP_SECTION_START_ERROR:\n      return { ...state, isUpdatingSession: false, error: action.error }\n\n    case REVIEW_QUESTIONS_REQUEST:\n      return { ...state, isFetchingSession: true }\n    case REVIEW_QUESTIONS_SUCCESS:\n      return { ...state, isFetchingSession: false, currentQuestionOrder: action.updatedQuestionOrder }\n    case REVIEW_QUESTIONS_ERROR:\n      return { ...state, isFetchingSession: false, error: action.error }\n\n    case START_SECTION:\n      return { ...state, mode: \"start\" }\n\n    case CHANGE_MODE:\n      return { ...state, mode: action.mode }\n\n    default:\n      return state\n  }\n}","import {\n  db_getAllExams,\n  db_getExamDetail,\n  db_getSectionDetail,\n  db_getAllStructureSessions,\n  db_getCategories,\n  db_getCategoryDetail,\n  db_getCategorySessions,\n  db_getCategoryQuestions,\n  db_getCompletedQuestions\n} from '../api/db';\n\nexport const GET_ALL_EXAMS_REQUEST = 'GET_ALL_EXAMS_REQUEST';\nexport const GET_ALL_EXAMS_SUCCESS = 'GET_ALL_EXAMS_SUCCESS';\nexport const GET_ALL_EXAMS_ERROR = 'GET_ALL_EXAMS_ERROR';\n\nconst getAllExamsRequest = { type: GET_ALL_EXAMS_REQUEST };\nconst getAllExamsSuccess = (allExams) => ({ type: GET_ALL_EXAMS_SUCCESS, allExams });\nconst getAllExamsError = error => ({ type: GET_ALL_EXAMS_ERROR, error });\n\nexport const getAllExams = (type) => async dispatch => {\n  dispatch(getAllExamsRequest);\n  try {\n    const allExams = await db_getAllExams(type)\n    dispatch(getAllExamsSuccess(allExams))\n\n  } catch (error) {\n    dispatch(getAllExamsError(error));\n  }\n};\n\n\nexport const GET_EXAM_DETAIL_REQUEST = 'GET_EXAM_DETAIL_REQUEST';\nexport const GET_EXAM_DETAIL_SUCCESS = 'GET_EXAM_DETAIL_SUCCESS';\nexport const GET_EXAM_DETAIL_ERROR = 'GET_EXAM_DETAIL_ERROR';\nexport const RESET_EXAM_DETAIL = 'RESET_EXAM_DETAIL';\n\nconst getExamDetailRequest = { type: GET_EXAM_DETAIL_REQUEST };\nconst getExamDetailSuccess = (examDetail) => ({ type: GET_EXAM_DETAIL_SUCCESS, examDetail });\nconst getExamDetailError = error => ({ type: GET_EXAM_DETAIL_ERROR, error });\n\nexport const getExamDetail = (structure_id) => async dispatch => {\n  dispatch(getExamDetailRequest);\n  try {\n    const examDetail = await db_getExamDetail(structure_id)\n    dispatch(getExamDetailSuccess(examDetail))\n\n  } catch (error) {\n    dispatch(getExamDetailError(error));\n  }\n};\n\nexport const resetExamDetail = () => {\n  return {\n    type: RESET_EXAM_DETAIL\n  }\n}\n\nexport const GET_SECTION_DETAIL_REQUEST = 'GET_SECTION_DETAIL_REQUEST';\nexport const GET_SECTION_DETAIL_SUCCESS = 'GET_SECTION_DETAIL_SUCCESS';\nexport const GET_SECTION_DETAIL_ERROR = 'GET_SECTION_DETAIL_ERROR';\nexport const RESET_SECTION_DETAIL = 'RESET_SECTION_DETAIL';\n\nconst getSectionDetailRequest = { type: GET_SECTION_DETAIL_REQUEST };\nconst getSectionDetailSuccess = (sectionDetail) => ({ type: GET_SECTION_DETAIL_SUCCESS, sectionDetail });\nconst getSectionDetailError = error => ({ type: GET_SECTION_DETAIL_ERROR, error });\n\nexport const getSectionDetail = (section_id) => async dispatch => {\n  dispatch(getSectionDetailRequest);\n  try {\n    const sectionDetail = await db_getSectionDetail(section_id)\n    dispatch(getSectionDetailSuccess(sectionDetail))\n\n  } catch (error) {\n    dispatch(getSectionDetailError(error));\n  }\n};\n\nexport const resetSectionDetail = () => {\n  return {\n    type: RESET_SECTION_DETAIL\n  }\n}\n\nexport const GET_STRUCTURE_SESSIONS_REQUEST = 'GET_STRUCTURE_SESSIONS_REQUEST';\nexport const GET_STRUCTURE_SESSIONS_SUCCESS = 'GET_STRUCTURE_SESSIONS_SUCCESS';\nexport const GET_STRUCTURE_SESSIONS_ERROR = 'GET_STRUCTURE_SESSIONS_ERROR';\n\nconst getStructureSessionsRequest = { type: GET_STRUCTURE_SESSIONS_REQUEST };\nconst getStructureSessionsSuccess = (structureSessions) => ({ type: GET_STRUCTURE_SESSIONS_SUCCESS, structureSessions });\nconst getStructureSessionsError = error => ({ type: GET_STRUCTURE_SESSIONS_ERROR, error });\n\nexport const getStructureSessions = (structure_id, student_id) => async dispatch => {\n  dispatch(getStructureSessionsRequest);\n  try {\n    const sessions = await db_getAllStructureSessions(structure_id, student_id)\n    dispatch(getStructureSessionsSuccess(sessions))\n\n  } catch (error) {\n    dispatch(getStructureSessionsError(error));\n  }\n};\n\nexport const GET_CATEGORIES_REQUEST = 'GET_CATEGORIES_REQUEST';\nexport const GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS';\nexport const GET_CATEGORIES_ERROR = 'GET_CATEGORIES_ERROR';\n\nconst getCategoriesRequest = { type: GET_CATEGORIES_REQUEST };\nconst getCategoriesSuccess = (categories) => ({ type: GET_CATEGORIES_SUCCESS, categories });\nconst getCategoriesError = error => ({ type: GET_CATEGORIES_ERROR, error });\n\nexport const getCategories = () => async dispatch => {\n  dispatch(getCategoriesRequest);\n  try {\n    const categories = await db_getCategories()\n    dispatch(getCategoriesSuccess(categories))\n\n  } catch (error) {\n    dispatch(getCategoriesError(error));\n  }\n};\n\n\nexport const GET_CATEGORY_DETAIL_REQUEST = 'GET_CATEGORY_DETAIL_REQUEST';\nexport const GET_CATEGORY_DETAIL_SUCCESS = 'GET_CATEGORY_DETAIL_SUCCESS';\nexport const GET_CATEGORY_DETAIL_ERROR = 'GET_CATEGORY_DETAIL_ERROR';\nexport const RESET_CATEGORY_DETAIL = 'RESET_CATEGORY_DETAIL';\n\nconst getCategoryDetailRequest = { type: GET_CATEGORY_DETAIL_REQUEST };\nconst getCategoryDetailSuccess = (categoryDetail) => ({ type: GET_CATEGORY_DETAIL_SUCCESS, categoryDetail });\nconst getCategoryDetailError = error => ({ type: GET_CATEGORY_DETAIL_ERROR, error });\n\nexport const getCategoryDetail = (category_id, student_id) => async dispatch => {\n  dispatch(getCategoryDetailRequest);\n  try {\n    const categoryDetail = await db_getCategoryDetail(category_id)\n    const categorySessions = await db_getCategorySessions(category_id, student_id)\n    const categoryQuestions = await db_getCategoryQuestions(category_id)\n    const completedCategoryQuestions = await db_getCompletedQuestions(category_id, student_id)\n\n    const totalQuestions = categoryQuestions.reduce(function (prev, cur) {\n      return prev + cur.question_order.length;\n    }, 0);\n    const totalCompletedQuestions = [...new Set(completedCategoryQuestions.map(JSON.stringify))].map(JSON.parse).reduce(function (prev, cur) {\n      return prev + cur.question_order.length;\n    }, 0);\n\n    console.log([...new Set(completedCategoryQuestions)])\n\n    dispatch(getCategoryDetailSuccess({\n      details: categoryDetail,\n      sessions: categorySessions,\n      totalQuestions,\n      totalCompletedQuestions\n    }))\n\n  } catch (error) {\n    dispatch(getCategoryDetailError(error));\n  }\n};\n\nexport const resetCategoryDetail = () => {\n  return {\n    type: RESET_CATEGORY_DETAIL\n  }\n}\n\n\n\n\n\n\n\n","import {\n  GET_ALL_EXAMS_REQUEST,\n  GET_ALL_EXAMS_SUCCESS,\n  GET_ALL_EXAMS_ERROR,\n\n  GET_EXAM_DETAIL_REQUEST,\n  GET_EXAM_DETAIL_SUCCESS,\n  GET_EXAM_DETAIL_ERROR,\n  RESET_EXAM_DETAIL,\n\n  GET_SECTION_DETAIL_REQUEST,\n  GET_SECTION_DETAIL_SUCCESS,\n  GET_SECTION_DETAIL_ERROR,\n  RESET_SECTION_DETAIL,\n\n  GET_STRUCTURE_SESSIONS_REQUEST,\n  GET_STRUCTURE_SESSIONS_SUCCESS,\n  GET_STRUCTURE_SESSIONS_ERROR,\n\n  GET_CATEGORIES_REQUEST,\n  GET_CATEGORIES_SUCCESS,\n  GET_CATEGORIES_ERROR,\n\n  GET_CATEGORY_DETAIL_REQUEST,\n  GET_CATEGORY_DETAIL_SUCCESS,\n  GET_CATEGORY_DETAIL_ERROR,\n  RESET_CATEGORY_DETAIL,\n\n} from '../actions/content'\n\nconst initialState = {\n  isFetchingExams: false,\n  isFetchingExamDetail: false,\n  isFetchingSectionDetail: false,\n  isFetchingQuestionDetail: false,\n  isFetchingSessions: false,\n  isFetchingCategories: false,\n  error: null,\n  allExams: [],\n  examDetail: null,\n  sectionDetail: null,\n  structureSessions: [],\n  categories: [],\n  categoryDetail: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_EXAMS_REQUEST:\n      return { ...state, isFetchingExams: true }\n    case GET_ALL_EXAMS_SUCCESS:\n      return { ...state, isFetchingExams: false, allExams: action.allExams }\n    case GET_ALL_EXAMS_ERROR:\n      return { ...state, isFetchingExams: false, error: action.error }\n\n    case GET_EXAM_DETAIL_REQUEST:\n      return { ...state, isFetchingExamDetail: true }\n    case GET_EXAM_DETAIL_SUCCESS:\n      return { ...state, isFetchingExamDetail: false, examDetail: action.examDetail }\n    case GET_EXAM_DETAIL_ERROR:\n      return { ...state, isFetchingExamDetail: false, error: action.error }\n    case RESET_EXAM_DETAIL:\n      return { ...state, examDetail: null }\n\n    case GET_SECTION_DETAIL_REQUEST:\n      return { ...state, isFetchingSectionDetail: true }\n    case GET_SECTION_DETAIL_SUCCESS:\n      return { ...state, isFetchingSectionDetail: false, sectionDetail: action.sectionDetail }\n    case GET_SECTION_DETAIL_ERROR:\n      return { ...state, isFetchingSectionDetail: false, error: action.error }\n    case RESET_SECTION_DETAIL:\n      return { ...state, sectionDetail: null }\n\n    case GET_STRUCTURE_SESSIONS_REQUEST:\n      return { ...state, isFetchingSessions: true }\n    case GET_STRUCTURE_SESSIONS_SUCCESS:\n      return { ...state, isFetchingSessions: false, structureSessions: action.structureSessions }\n    case GET_STRUCTURE_SESSIONS_ERROR:\n      return { ...state, isFetchingSessions: false, error: action.error }\n\n    case GET_CATEGORIES_REQUEST:\n      return { ...state, isFetchingCategories: true }\n    case GET_CATEGORIES_SUCCESS:\n      return { ...state, isFetchingCategories: false, categories: action.categories }\n    case GET_CATEGORIES_ERROR:\n      return { ...state, isFetchingCategories: false, error: action.error }\n    case RESET_CATEGORY_DETAIL:\n      return { ...state, categoryDetail: null }\n\n    case GET_CATEGORY_DETAIL_REQUEST:\n      return { ...state, isFetchingCategoryDetail: true }\n    case GET_CATEGORY_DETAIL_SUCCESS:\n      return { ...state, isFetchingCategoryDetail: false, categoryDetail: action.categoryDetail }\n    case GET_CATEGORY_DETAIL_ERROR:\n      return { ...state, isFetchingCategoryDetail: false, error: action.error }\n\n    default:\n      return state\n  }\n}","import {\n  db_createUser,\n  db_userExists,\n  wp_authenticate\n} from '../api/db';\nimport { getCookie, setCookie, eraseCookie } from '../utils/helpers'\nvar jwt = require('jsonwebtoken')\n\nexport const INIT_USER_REQUEST = 'INIT_USER_REQUEST';\nexport const INIT_USER_SUCCESS = 'INIT_USER_SUCCESS';\nexport const INIT_USER_ERROR = 'INIT_USER_ERROR';\nexport const GET_USER = 'GET_USER';\nexport const LOGOUT_USER = 'LOGOUT_USER';\n\nconst initUserRequest = { type: INIT_USER_REQUEST };\nconst initUserSuccess = (userData) => ({ type: INIT_USER_SUCCESS, userData });\nconst initUserError = error => ({ type: INIT_USER_ERROR, error });\n\nexport const initUser = (username, password) => async dispatch => {\n  dispatch(initUserRequest);\n  try {\n\n    const response = await wp_authenticate(username, password)\n    let userData\n\n    if (response.success) {\n      const userInfo = jwt.decode(response.data.jwt)\n\n      if (userInfo.roles.includes(\"ucat_content_subscriber\")) {\n\n        const userExists = await db_userExists(userInfo.username)\n        console.log(userExists)\n        if (userExists == \"\") {\n          userData = await db_createUser(userInfo.username, userInfo.display_name, userInfo.roles)\n        } else {\n          userData = userExists\n        }\n\n        const token = jwt.sign(userData, 'secret')\n        setCookie(\"jwt\", token, 1)\n\n        dispatch(initUserSuccess(userData))\n      } else {\n        dispatch(initUserError(\"You have not purchased the UCAT plan.\"));\n      }\n    }\n  } catch (error) {\n    dispatch(initUserError(\"Wrong credentials. Try again.\"));\n  }\n};\n\nexport const getUser = () => {\n  const userData = jwt.decode(getCookie(\"jwt\"))\n\n  return {\n    type: GET_USER,\n    userData\n  }\n}\n\nexport const logoutUser = () => {\n  eraseCookie(\"jwt\")\n\n  return {\n    type: LOGOUT_USER\n  }\n}\n\n\n","import {\n  INIT_USER_REQUEST,\n  INIT_USER_SUCCESS,\n  INIT_USER_ERROR,\n\n  GET_USER,\n\n  LOGOUT_USER\n} from '../actions/auth'\n\nconst initialState = {\n  userData: null,\n  isCreatingUser: false,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case INIT_USER_REQUEST:\n      return { ...state, isCreatingUser: true }\n    case INIT_USER_SUCCESS:\n      return { ...state, isCreatingUser: false, userData: action.userData }\n    case INIT_USER_ERROR:\n      return { ...state, isCreatingUser: false, error: action.error }\n\n    case GET_USER:\n      return { ...state, userData: action.userData }\n\n    case LOGOUT_USER:\n      return { ...state, userData: null, error: null }\n\n    default:\n      return state\n  }\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './reducers/session';\nimport content from './reducers/content';\nimport auth from './reducers/auth';\nimport logger from 'redux-logger'\n\nexport default createStore(\n  combineReducers({ content, session, auth }),\n  applyMiddleware(thunk, logger)\n);","import React from 'react';\nimport styled from 'styled-components'\nimport Loader from 'react-loader-spinner'\n\n\nconst Loading = (props) => {\n  return (\n    <CenteredDiv\n      duringSession={props.duringSession}\n    >\n      <Loader\n        type=\"TailSpin\"\n        color={props.duringSession ? \"#006daa\" : \"#2ecfb0\"}\n        height={100}\n        width={100}\n      />\n    </CenteredDiv>\n  )\n}\n\nconst CenteredDiv = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  margin-top: -50px;\n  margin-left: ${props => props.duringSession ? '-50px' : '50px'};\n`\n\nexport default Loading","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { getAllExams } from '../actions/content'\nimport Loading from '../components/Shared/Loading'\n\nimport styled from 'styled-components'\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\n\nconst mapDispatchToProps = { getAllExams }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Home = (props) => {\n\n  useEffect(() => {\n    props.getAllExams(props.type)\n  }, [props.history.location.pathname])\n\n  const SectionMocks = ({\n    examList,\n    topic\n  }) => {\n    return (\n      <>\n        <SectionTitle>\n          {topic}\n        </SectionTitle>\n        <ExamList>\n          {examList.map((exam, i) => {\n            if (exam.name.includes(topic)) {\n              return (\n                <Card key={i}\n                  onClick={() => {\n                    props.history.push(`/${props.type.toLowerCase()}/` + exam.structure_id.toString())\n                  }}\n                >\n                  <CardTop>\n                    <CardHeading\n                      type=\"mock\"\n                    >{exam.name}</CardHeading>\n                  </CardTop>\n\n                  <CardBottom>\n                    <CardLength>\n                      {exam.time} min\n                  </CardLength>\n                    <Button>\n                      <AiOutlineArrowRight color=\"#f89800\" size={25} />\n                    </Button>\n                  </CardBottom>\n\n                </Card>\n              )\n            }\n          })}\n        </ExamList>\n      </>\n    )\n  }\n\n  if (props.content.isFetchingExams) return <Loading />\n  if (!props.content.allExams) return null\n\n  return (\n    <Container>\n      <Title>{props.type}s</Title>\n\n      {props.type === \"Exam\" ?\n\n        <>\n          <ExamList>\n            {props.content.allExams.map((exam, i) => {\n              return (\n                <Card key={i}\n                  onClick={() => {\n                    props.history.push(`/${props.type.toLowerCase()}/` + exam.structure_id.toString())\n                  }}\n                >\n                  <CardTop>\n                    <CardHeading type=\"exam\">{exam.name}</CardHeading>\n                  </CardTop>\n\n                  <CardBottom>\n                    <CardLength>\n                      {exam.time} min\n                  </CardLength>\n                    <Button>\n                      <AiOutlineArrowRight color=\"#f89800\" size={25} />\n                    </Button>\n                  </CardBottom>\n\n                </Card>\n              )\n            })}\n          </ExamList>\n        </>\n        :\n        <>\n          <SectionMocks\n            topic=\"Verbal Reasoning\"\n            examList={props.content.allExams}\n          />\n          <SectionMocks\n            examList={props.content.allExams}\n            topic=\"Decision Making\"\n          />\n          <SectionMocks\n            examList={props.content.allExams}\n            topic=\"Quantitative Reasoning\"\n          />\n          <SectionMocks\n            examList={props.content.allExams}\n            topic=\"Abstract Reasoning\"\n          />\n          <SectionMocks\n            examList={props.content.allExams}\n            topic=\"Situational Judgement\"\n          />\n        </>\n\n      }\n\n    </Container>\n  )\n}\n\nconst Title = styled.div`\n  color: rgba(0,0,0,0.25);\n  font-family: Gilroy-Regular;\n  font-size: 17px;\n  padding: 15px 0;\n`\nconst Container = styled.div`\n  padding: 30px;\n  margin-left: 340px;\n`\n\nconst ExamList = styled.div`\n  display: flex;\n  margin-top: 20px;\n  flex-wrap: wrap;\n`\n\nconst CardHeading = styled.div`\n  font-family: ${props => props.type === \"exam\" ? \"Gilroy-Bold\" : \"Gilroy-Medium\"};\n  font-size: 20px;\n`\n\nconst CardText = styled.div`\n  font-family: Gilroy-Medium;\n  font-size: 15px;\n`\n\nconst CardLength = styled.div`\n  color: rgba(0,0,0,0.3)\n`\n\nconst CardTop = styled.div`\n`\n\nconst CardBottom = styled.div`\n  flex-direction: row;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between\n`\n\nconst Button = styled.div`\n`\n\nconst Card = styled.div`\n  background: white;\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.05);\n  padding: 20px;\n  border-radius: 15px;\n  width: 200px;\n  height: 100px;\n  margin-right: 20px;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 20px;\n`\n\nconst SectionTitle = styled.div`\n  font-size: 20px;\n  font-family: Gilroy-Bold;\n  margin-top: 28px\n`\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import React, { useEffect, useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { RiFlag2Fill, RiFlag2Line } from \"react-icons/ri\";\nimport { useDrag, useDrop } from 'react-dnd';\nimport update from \"immutability-helper\";\nimport { TiTick, TiTimes } from \"react-icons/ti\";\nimport { ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\nimport { AiFillCloseSquare } from \"react-icons/ai\";\nimport Draggable from 'react-draggable';\n\n\nexport const ThemedModal = ({\n  button,\n  body,\n  heading,\n  onClick,\n  onClickNo\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <>\n      {button(setIsOpen)}\n      {isOpen ?\n        <ThemedModalContainer>\n          <ModalHeader>\n            {heading}\n            <span onClick={() => {\n              onClickNo(setIsOpen)\n            }} style={{ cursor: 'pointer' }}>\n              <TiTimes size={20} color=\"white\" />\n            </span>\n          </ModalHeader>\n          <ModalBody>\n            <ModalText>\n              {body}\n            </ModalText>\n            <ModalButtons>\n              <ModalButton\n                onClick={() => {\n                  onClickNo(setIsOpen)\n                }}\n              >No</ModalButton>\n              <ModalButton\n                onClick={() => {\n                  onClick(setIsOpen)\n                }}\n              >Yes</ModalButton>\n            </ModalButtons>\n          </ModalBody>\n        </ThemedModalContainer>\n        : null}\n    </>\n  )\n}\n\n\nexport const Button = ({ type, label, color, onClick }) => {\n  return (\n    <Container\n      onClick={onClick}\n      color={color === \"teal\" ? '#2ecfb0' : '#f89800'}\n    >\n      {type === \"primary\" ?\n        <ButtonPrimary\n          color={color === \"teal\" ? '#2ecfb0' : '#f89800'}\n        >\n          {label}\n        </ButtonPrimary>\n        : type === \"secondary\" ?\n          <ButtonSecondary\n            color={color === \"teal\" ? '#2ecfb0' : '#f89800'}\n          >\n            {label}\n          </ButtonSecondary>\n          : null}\n    </Container>\n  )\n}\n\nexport const LinkItem = ({\n  onClick,\n  children,\n  color\n}) => {\n  return (\n    <Link\n      onClick={onClick}\n      color={color === \"teal\" ? '#2ecfb0' : '#f89800'}\n    >\n      {children}\n    </Link>\n  )\n}\n\nexport const RadioBox = ({\n  options,\n  defaultValue,\n  onClick,\n  images\n}) => {\n  const [selectedOption, setSelectedOption] = useState(defaultValue ? defaultValue : null)\n  return (\n    <RadioElements>\n      {options.map((item, i) => {\n        return (\n          <RadioOption\n            onClick={() => {\n              setSelectedOption(item)\n              onClick(item)\n            }}\n            key={i}\n          >\n            <RadioCircle>\n              {selectedOption === item ?\n                <ImRadioChecked />\n                :\n                <ImRadioUnchecked />\n              }\n            </RadioCircle>\n            <RadioContent>\n              {item}\n              {images && images[i] ? <RadioBoxImage src={images[i]} /> : null}\n            </RadioContent>\n\n          </RadioOption>\n        )\n      })}\n    </RadioElements>\n  )\n}\n\nexport const Box = ({ name }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { name, type: 'box' },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n  const opacity = isDragging ? 0.4 : 1;\n  return (<DraggableItem ref={drag} style={{ opacity }}>\n    {name}\n  </DraggableItem>);\n};\n\nexport const Dustbin = ({\n  lastDroppedItem,\n  onDrop\n}) => {\n  const [{ canDrop, isOver }, drop] = useDrop({\n    accept: 'box',\n    drop: onDrop,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n    }),\n  });\n  return (\n    <DragAndDropAnswer\n      ref={drop}\n      dropped={lastDroppedItem ? true : false}\n    >\n      {lastDroppedItem ? (\n        <>\n          {lastDroppedItem}\n        </>\n      ) : null}\n    </DragAndDropAnswer>\n  );\n};\n\n\n\nexport const DragAndDrop = ({\n  options,\n  defaultValue,\n  onClick\n}) => {\n  const generateDustbins = (options, defaultValue) => {\n    let dustbins = []\n\n    for (let i = 0; i < options.length; i++) {\n      dustbins.push({ lastDroppedItem: defaultValue && defaultValue[i] ? defaultValue[i] : null })\n    }\n\n    return dustbins\n  }\n\n  const convertDustbinsToString = (dustbins) => {\n    let dustbinArr = []\n    for (let i = 0; i < dustbins.length; i++) {\n      if (dustbins[i]) {\n        dustbinArr.push(dustbins[i].lastDroppedItem)\n      } else {\n        dustbinArr.push(null)\n      }\n    }\n    return dustbinArr.join(\";\")\n  }\n  const [dustbins, setDustbins] = useState(generateDustbins(options, defaultValue()));\n\n  const handleDrop = useCallback(\n    (index, item) => {\n      const updatedDustbins = update(dustbins, {\n        [index]: {\n          lastDroppedItem: {\n            $set: item.name\n          }\n        }\n      })\n\n      onClick(convertDustbinsToString(updatedDustbins))\n\n      setDustbins(\n        updatedDustbins\n      );\n    },\n    [dustbins]\n  );\n\n  return (\n    <>\n      <DragAndDropBigContainer>\n        <DragAndDropOptions>\n          {options.map((item, i) => {\n            return (\n              <DragAndDropContainer\n                key={i}\n              >\n                <DragAndDropOption>\n                  {item}\n                </DragAndDropOption>\n                <Dustbin\n                  lastDroppedItem={dustbins[i].lastDroppedItem}\n                  onDrop={(item) => handleDrop(i, item)}\n                />\n              </DragAndDropContainer>\n            )\n          })}\n        </DragAndDropOptions>\n        <DraggableItems>\n          <Box name=\"Yes\" />\n          <Box name=\"No\" />\n        </DraggableItems>\n      </DragAndDropBigContainer>\n    </>\n  )\n}\n\nexport const DragAndDropReview = ({\n  options,\n  correctValue,\n  selectedValue\n}) => {\n  return (\n    <DragAndDropBigContainer>\n      <DragAndDropOptions>\n        {options.map((item, i) => {\n          return (\n            <DragAndDropContainer\n              key={i}\n            >\n              <DragAndDropOption>\n                {item}\n              </DragAndDropOption>\n              <DragAndDropAnswer\n                dropped={selectedValue() && selectedValue()[i] ? true : false}\n              >\n                {selectedValue() && selectedValue()[i]}\n              </DragAndDropAnswer>\n              <DragAndDropResult>\n                {selectedValue() && correctValue[i] === selectedValue()[i] ?\n                  <TiTick color=\"green\" size={30} />\n                  :\n                  <TiTimes color=\"red\" size={30} />\n                }\n              </DragAndDropResult>\n            </DragAndDropContainer>\n          )\n        })}\n      </DragAndDropOptions>\n    </DragAndDropBigContainer>\n  )\n}\n\nexport const RadioBoxAnswer = ({\n  options,\n  correctValue,\n  selectedValue,\n  images\n}) => {\n\n  useEffect(() => {\n    console.log(selectedValue, correctValue)\n  })\n\n\n  return (\n    <RadioElements>\n      {options.map((item, i) => {\n        return (\n          <RadioOption\n            key={i}\n\n          >\n            <RadioCircle>\n              {selectedValue() == item ?\n                <ImRadioChecked />\n                :\n                <ImRadioUnchecked />\n              }\n            </RadioCircle>\n            <RadioContent>\n              <Content>\n                {item}\n                {images && images[i] ? <RadioBoxImage src={images[i]} /> : null}\n              </Content>\n              <Result>\n                {item === selectedValue() && correctValue !== selectedValue() ?\n                  <Text color=\"red\">Your answer: Incorrect</Text>\n                  : item === correctValue && correctValue !== selectedValue() ?\n                    <Text color=\"green\">Correct Answer</Text>\n                    : item === selectedValue() && correctValue === selectedValue() ?\n                      <Text color=\"green\">Your answer: Correct!</Text>\n                      : null\n                }\n              </Result>\n            </RadioContent>\n          </RadioOption>\n\n\n        )\n      })}\n\n      {!selectedValue() ?\n        <NoSelectionText>\n          You didn't select an option.\n        </NoSelectionText>\n        : null}\n\n    </RadioElements>\n  )\n}\n\nexport const FlagButton = ({\n  flagged,\n  action\n}) => {\n\n  const [isFlagged, setFlagged] = useState(flagged)\n\n  useEffect(() => {\n    setFlagged(flagged)\n  }, [flagged])\n\n  return (\n    <FlagContainer\n      onClick={() => {\n        action(!isFlagged)\n        setFlagged(!isFlagged)\n      }}\n    >\n      {isFlagged ?\n        <RiFlag2Fill color=\"white\" size={20} />\n        :\n        <RiFlag2Line color=\"white\" size={20} />\n      }\n\n      Flag for Review\n    </FlagContainer>\n  )\n}\n\nexport const DraggableWindow = ({\n  isOpen,\n  setClose,\n  children,\n  title\n}) => {\n\n  if (isOpen) {\n    return (\n      <Draggable>\n        <Window>\n          <WindowHeader>\n            <div>{title}</div>\n            <div onClick={setClose}>\n              <AiFillCloseSquare color=\"white\" />\n            </div>\n          </WindowHeader>\n          {children}\n        </Window>\n      </Draggable>\n    )\n  } else {\n    return null\n  }\n}\n\nconst WindowHeader = styled.div`\n  display: flex;\n  background: #056DAA;\n  color: white;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: -2px;\n`\nconst Window = styled.div`\n  position: absolute;\n  z-index: 999999;\n  display: flex;\n  flex-direction: column;\n  margin: 30px;\n`\n\nconst FlagContainer = styled.div`\n  cursor: pointer;\n  margin-right: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst RadioOption = styled.div`\n  margin-bottom: 2px;\n  max-width: 100%;\n  display: flex;\n  align-items: center;  \n  cursor: pointer;\n  padding: 8px 0;\n`\n\n\n\nconst Link = styled.div`\n  color: ${props => props.color};\n  font-family: Gilroy-Medium;\n  opacity: 0.5;\n  cursor: pointer;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst Container = styled.div`\n  cursor: pointer;\n\n  div:hover {\n    background: ${props => props.color};\n    color: white;\n  }\n`\n\nconst ButtonPrimary = styled.div`\n  background: ${props => props.color};\n  color: white;\n  border-radius: 10px;\n  padding: 10px 15px;\n  font-family: Gilroy-SemiBold;\n  cursor: pointer;\n`\n\nconst ButtonSecondary = styled.div`\n  background: white;\n  border: 1.5px solid ${props => props.color};\n  color: ${props => props.color};\n  border-radius: 10px;\n  padding: 10px 15px;\n  font-family: Gilroy-SemiBold;\n  cursor: pointer;\n`\n\nconst NoSelectionText = styled.div`\n  color: red;\n  margin-top: 40px;\n  text-align: right;\n`\nconst DragAndDropOption = styled.div`\n  color: black;\n  padding: 20px;\n  border: 1px solid black;\n  margin-bottom: 10px;\n  width: 100%;\n  display: flex;\n  align-items: center;  \n  cursor: pointer;\n  justify-content: space-between;\n`\n\nconst DragAndDropContainer = styled.div`\n  display: flex;\n`\nconst DragAndDropAnswer = styled.div`\n  display: flex;\n  background: ${props => props.dropped ? \"white\" : \"#BAB1B1\"};\n  padding: 20px;\n  border: 1px solid black;\n  margin-bottom: 10px;\n  margin-left: 10px;\n  width: 30px;\n`\n\nconst DraggableItem = styled.div`\n  background: white;\n  padding: 20px;\n  border: 1px solid black;\n  margin-left: 10px;\n  width: 30px; \n  text-align: center;\n  cursor: move;\n  float: left;\n  margin-bottom: 10px;\n`\n\nconst DragAndDropOptions = styled.div`\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n`\n\nconst DraggableItems = styled.div`\n  flex: 1;\n  display: flex;  \n  flex-direction: column;\n  justify-content: center;\n  padding: 20px;\n`\n\nconst DragAndDropBigContainer = styled.div`\n  display: flex;\n  width: 70%;\n`\n\nconst DragAndDropResult = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n`\n\nconst RadioBoxImage = styled.img`\n  width: 30%;\n`\n\nconst RadioElements = styled.div`\n \n`\n\nconst RadioCircle = styled.div`\n  margin-right: 10px;\n`\n\nconst RadioContent = styled.div`\n  display: flex;\n  align-items: flex-start;\n  width: 100%;\n  flex-direction: column;\n`\n\nconst Content = styled.div`\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 100%;\n`\n\nconst Result = styled.div`\n\n`\n\nconst Text = styled.div`\n  color: ${props => props.color}\n`\n\nconst ThemedModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background: #056daa;\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  marginRight: -50%;\n  transform: translate(-50%, -50%)\n`\n\nconst ModalHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid white;\n  padding: 10px;\n`\n\nconst ModalBody = styled.div`\n  padding: 10px 20px;\n`\n\nconst ModalText = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 10px;\n`\n\nconst ModalButtons = styled.div`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  padding-bottom: 10px;\n`\n\nconst ModalButton = styled.div`\n  padding: 5px 15px;\n  border: 1px solid white;\n  margin: 5px;\n  cursor: pointer;\n`","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { getExamDetail, getStructureSessions, resetExamDetail } from '../actions/content'\nimport { createSession } from '../actions/session'\nimport styled from 'styled-components'\nimport {\n  Text\n} from 'rebass'\nimport Loading from '../components/Shared/Loading'\nimport { Button } from '../components/Shared/Elements'\nimport { AiOutlineArrowRight } from \"react-icons/ai\"\nimport { useDidMountEffect } from '../utils/helpers'\nimport { TiTick } from \"react-icons/ti\";\n\nconst mapDispatchToProps = { getExamDetail, resetExamDetail, createSession, getStructureSessions }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst calculateTimeLeft = (sectionTime, startTime) => {\n  const timeElapsed = (new Date().getTime() - new Date(startTime).getTime()) / 60000\n  const timeLeft = sectionTime - timeElapsed\n\n  if (timeLeft > 0) {\n    return Math.round(timeLeft)\n  } else {\n    return 0\n  }\n}\n\nconst SectionCard = ({\n  sectionName,\n  questionCount,\n  time,\n  status,\n  action\n}) => {\n  return (\n\n    <Card\n      status={status}\n      className=\"hvr-float\"\n    >\n      <CardLeft>\n        <CardTime className=\"time\">\n          {status === \"ongoing\" || status === \"future\" ?\n            <>\n              {time} <br /> min\n            </>\n            :\n            <>\n              <TiTick color=\"#f89800\" size={40} />\n            </>\n          }\n\n        </CardTime>\n\n        <CardInfo>\n          <CardTitle>{sectionName}</CardTitle>\n          <Caption>{questionCount} questions</Caption>\n        </CardInfo>\n      </CardLeft>\n\n      {action ?\n        <CardRight>\n          {action()}\n        </CardRight>\n        : null}\n\n    </Card>\n  )\n}\n\nconst Exam = (props) => {\n\n  useEffect(() => {\n    props.getExamDetail(props.match.params.structure_id)\n    console.log(props.auth.userData)\n    props.getStructureSessions(props.match.params.structure_id, props.auth.userData.student_id)\n\n    return () => {\n      props.resetExamDetail()\n    }\n\n  }, [])\n\n  useDidMountEffect(() => {\n    if (props.session.currentSession) {\n      props.history.push('/session/' + props.session.currentSession.session_id)\n    }\n  }, [props.session.currentSession])\n\n  if (props.content.isFetchingExamDetail || props.content.isFetchingSessions) return <Loading />\n  if (!props.content.examDetail || !props.content.structureSessions) return null\n\n  return (\n    <Container>\n      <PreHeading>Details</PreHeading>\n\n      <Header>\n        <HeaderLeft>\n          <Title>\n            {props.content.examDetail.details.name}\n          </Title>\n          <Text>\n            {props.content.examDetail.details.description}\n          </Text>\n        </HeaderLeft>\n\n        <HeaderRight>\n          {props.content.structureSessions.length === 0 ?\n            <Button\n              type=\"primary\"\n              color=\"orange\"\n              label=\"Start Exam\"\n              onClick={() => {\n                props.createSession(props.content.examDetail.details.structure_id, props.auth.userData.student_id)\n              }}\n            />\n            : <>\n\n              {props.content.structureSessions[0].completed ?\n                <OrangeLink\n                  onClick={() => {\n                    props.createSession(props.content.examDetail.details.structure_id, props.auth.userData.student_id)\n                  }}\n                >\n                  Re-attempt Exam\n              </OrangeLink>\n                : null}\n\n              {!props.content.structureSessions[0].completed ?\n                <Button\n                  label={\"Resume Exam\"}\n                  type=\"primary\"\n                  color=\"orange\"\n                  onClick={() => {\n                    props.history.push(\"/session/\" + props.content.structureSessions[0].session_id)\n                  }}\n                />\n                : null}\n\n            </>}\n\n\n\n        </HeaderRight>\n      </Header>\n\n      <Sections>\n        {props.content.examDetail.sections.map((section, i) => {\n          const started = props.content.structureSessions.length > 0\n          let sectionStartTime = null, sectionEndTime = null\n\n          if (started) {\n            sectionStartTime = props.content.structureSessions[0].start_time[i] ? props.content.structureSessions[0].start_time[i] : null\n            sectionEndTime = props.content.structureSessions[0].end_time[i] ? props.content.structureSessions[0].end_time[i] : null\n          }\n\n          if (sectionEndTime && sectionStartTime) {\n\n            // If the section is finished!\n\n            return (\n              <SectionCard\n                key={i}\n                sectionName={section.name}\n                questionCount={section.question_order.length}\n                status=\"finished\"\n                time={null}\n                action={null}\n              />\n            )\n          } else if (sectionStartTime && !sectionEndTime) {\n\n            // If the section is currently ongoing!\n\n            const timeLeft = calculateTimeLeft(section.time, sectionStartTime)\n\n            return (\n              <SectionCard\n                key={i}\n                sectionName={section.name}\n                questionCount={section.question_order.length}\n                status=\"ongoing\"\n                time={timeLeft}\n                action={() => {\n                  return (\n                    <div onClick={() => {\n                      props.history.push('/session/' + props.content.structureSessions[0].session_id)\n                    }}>\n                      <AiOutlineArrowRight color=\"white\" size={32} />\n                    </div>\n                  )\n                }\n                }\n              />\n            )\n          } else {\n            return (\n              <SectionCard\n                key={i}\n                sectionName={section.name}\n                questionCount={section.question_order.length}\n                status=\"future\"\n                time={section.time}\n                action={null}\n              />\n            )\n          }\n\n        })}\n      </Sections>\n\n      <PastSessions>\n        {props.content.structureSessions.length > 0 ?\n          <PreHeading\n            style={{ 'padding-bottom': 10 }}\n          >Past Sessions</PreHeading>\n          : null\n        }\n\n        {props.content.structureSessions.map((session) => {\n          if (session.completed) {\n            return (\n              <Card\n                className=\"hvr-float\"\n                onClick={() => {\n                  props.history.push(`/session/${session.session_id}`)\n                }}\n                style={{\n                  cursor: 'pointer'\n                }}\n              >\n\n                <CardTitle>\n                  {new Date(session.start_time[0]).toLocaleDateString()}\n                </CardTitle>\n                <CardInfo>\n                  Score: {session.score}\n                </CardInfo>\n\n              </Card>\n            )\n          }\n        })}\n      </PastSessions>\n\n    </Container >\n  )\n}\nconst PastSessions = styled.div`\n\n`\nconst Caption = styled(Text)`\n  opacity: 0.6;\n`\nconst CardTime = styled.div`\n  height: 70px;\n  width: 70px;\n  border-radius: 20px;\n  border: 2px solid #f89800;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  text-align: center\n`\n\nconst CardInfo = styled.div`\n  margin-left: 20px;\n`\n\nconst CardTitle = styled.div`\n  font-family: Gilroy-SemiBold;\n  font-size: 20px;\n`\n\nconst Card = styled.div`\n  background: ${props => props.status === \"ongoing\" ? '#f89800' : 'white'};\n  color: ${props => props.status === \"ongoing\" ? 'white' : 'black'};\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.05);\n  padding: 15px 20px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .time {\n    color: ${props => props.status === \"ongoing\" ? 'white' : '#f89800'};\n  }\n`\n\nconst Container = styled.div`\n  padding: 30px;\n  margin-left: 340px;\n`\n\nconst Sections = styled.div`\n  padding: 20px 0;\n`\n\nconst Title = styled.div`\n  font-family: Gilroy-Bold;\n  font-size: 40px;\n`\n\nconst PreHeading = styled(Text)`\n  color: rgba(0,0,0,0.3);\n  padding-bottom: 40px;\n  font-family: Gilroy-Regular;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 40px;\n`\n\nconst HeaderLeft = styled.div`\n`\n\nconst HeaderRight = styled.div`\n  display: flex;\n  align-items: center;\n  \n  div {\n    margin-left: 10px;\n  }\n`\n\nconst CardLeft = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst CardRight = styled.div`\n  padding-right: 20px;\n  cursor: pointer;\n`\n\nconst OrangeLink = styled.div`\n  color: #f89800;\n  opacity: 0.5;\n  cursor: pointer;\n`\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Exam)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst BottomBar = ({\n  leftContent,\n  rightContent\n}) => {\n  return (\n    <Container>\n      <BottomBarInner>\n        <BottomBarLeft>\n          {leftContent()}\n        </BottomBarLeft>\n        <BottomBarRight>\n          {rightContent()}\n        </BottomBarRight>\n      </BottomBarInner>\n    </Container>\n  )\n}\n\nexport default BottomBar\n\nconst Container = styled.div`\n  box-shadow: -10px -10px 20px rgba(0,0,0, 0.02);\n  background: #006daa;\n  color: white;\n  height: 40px;\n  position: fixed;\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  z-index: 100;\n`\n\nconst BottomBarInner = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n`\n\nconst BottomBarLeft = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst BottomBarRight = styled.div`\n  display: flex;\n  align-items: center;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst TopBarSecondary = ({\n  leftContent,\n  rightContent\n}) => {\n  return (\n    <Container>\n      <TopBarInner>\n        <TopBarLeft>\n          {leftContent()}\n        </TopBarLeft>\n        <TopBarRight>\n          {rightContent()}\n        </TopBarRight>\n      </TopBarInner>\n    </Container>\n  )\n}\n\nexport default TopBarSecondary\n\nconst Container = styled.div`\n  background: #80aee1;\n  color: white;\n  height: 30px;\n  width: 100%;\n  top: 50px;\n  overflow: hidden;\n  position: fixed;\n  z-index: 999;\n  border-top: 3px solid white;\n`\n\nconst TopBarInner = styled.div`\n  margin: 0;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 100%;\n`\n\nconst TopBarLeft = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst TopBarRight = styled.div`\n  display: flex;\n  align-items: center;\n`","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport ScriptTag from 'react-script-tag';\n\n\nconst Calculator = (props) => {\n\n  return (\n    <Container>\n      <div id=\"calc-body\">\n        <div id=\"header\">\n          <div id=\"screen\">\n            <p id=\"output\"></p>\n          </div>\n          <div id=\"decoration\">\n            <div id=\"solar\">\n              <div class=\"solarbox\"></div>\n              <div class=\"solarbox\"></div>\n              <div class=\"solarbox\"></div>\n              <div class=\"solarbox\"></div>\n            </div>\n            <p id=\"logo\">TI-108</p>\n          </div>\n        </div>\n\n        <div id=\"button-box\">\n          <div class=\"col left-buttons\">\n            <div class=\"op button\" id=\"sign\">+/-</div>\n            <div class=\"op button\" id=\"sqrt\">&radic;</div>\n            <div class=\"op button\" id=\"percent\">%</div>\n            <div class=\"op button\" id=\"mrc\">MRC</div>\n            <div class=\"op button\" id=\"msubtract\">M-</div>\n            <div class=\"op button\" id=\"madd\">M+</div>\n            <div class=\"number button\">7</div>\n            <div class=\"number button\">8</div>\n            <div class=\"number button\">9</div>\n            <div class=\"number button\">4</div>\n            <div class=\"number button\">5</div>\n            <div class=\"number button\">6</div>\n            <div class=\"number button\">1</div>\n            <div class=\"number button\">2</div>\n            <div class=\"number button\">3</div>\n            <div class=\"op button\" id=\"clear\" >ON/C</div>\n            <div class=\"number button\">0</div>\n            <div class=\"number button\">.</div>\n          </div>\n\n          <div class=\"col right-buttons\">\n            <div class=\"op button\" id=\"divide\">&divide;</div>\n            <div class=\"op button\" id=\"multiply\">&times;</div>\n            <div class=\"op button\" id=\"subtract\">-</div>\n            <div class=\"op button\" id=\"add\">+</div>\n            <div class=\"op button\" id=\"equals\">=</div>\n          </div>\n        </div>\n\n      </div>\n\n      <ScriptTag isHydrating={false} type=\"text/javascript\" src=\"/calculate.js\" />\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n/******************************\n BODY\n *******************************/\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n html {\n   background-color: #badae5;\n }\n \n body{\n   width: 100%;\n }\n \n #calc-body {\n   height: 450px;\n   width: 300px;\n   background-color:#0d57b6;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-around;\n   font-family: \"Courier New\", monospace;\n   border-top-left-radius: 5px;\n   border-top-right-radius: 5px;\n   border-bottom-left-radius: 10px;\n   border-bottom-right-radius: 10px;\n }\n \n \n \n /******************************\n HEADER\n *******************************/\n \n #header {\n   height: 130px;\n   width: 300px;\n   display: flex;\n   flex-direction: column;\n   justify-content: space-around;\n   align-items: center;\n   padding-bottom: 5px;\n   border-bottom: 2px solid #444;\n }\n \n #screen {\n   width: 250px;\n   height: 40px;\n   background-color: slategrey;\n   border-radius: 2px;\n \n }\n \n #screen p {\n   text-align: right;\n   padding: 10px 10px 0 0; \n   font-size: 24px;\n   color: #333;\n }\n \n #decoration {\n   width: 250px;\n   display: flex; \n   justify-content: space-between;\n }\n \n #solar {\n   height: 40px;\n   width: 160px;\n   background-color: #584237;\n   display: flex;\n }\n \n .solarbox {\n   height: 100%;\n   width: 40px;\n   border: 0.1px solid slategrey;\n }\n \n #logo {\n   font-size: 20px;\n   color: white;\n }\n \n \n /******************************\n BUTTONS\n *******************************/\n \n \n #button-box,\n .col {\n   display: flex;\n   height: 280px;\n }\n \n #button-box {\n   width: 280px;\n   margin: 0 auto;\n   flex-direction: row;\n   justify-content: space-between;\n }\n \n .col {\n   flex-flow: wrap;\n   justify-content: space-around;\n   align-content: space-around;\n }\n \n .left-buttons {\n   width: 200px;\n }\n \n .right-buttons {\n   width: 60px;\n   flex-direction: column;\n }\n \n .button {\n   width: 50px;\n   height: 30px;\n   border-radius: 2px;\n   padding-left: 4px;\n   padding-top: 4px;\n   font-size: 16px;\n }\n \n .number {\n   background-color: white;\n   color: #0d57b6; \n }\n \n .op {\n   background-color: #db3c32;\n   color: white;\n }\n \n #equals {\n   height: 80px;\n }\n \n \n \n /*** ANIMATION ***/\n \n .button:hover {\n   cursor: pointer;\n }\n \n .button:active {\n   transform: translateY(1.5px);\n }\n \n \n \n \n`\nexport default Calculator","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { finishSession, getQuestionDetail, createResponse, reviewSection, getSessionResponses, flagResponse } from '../../actions/session'\nimport Loading from '../Shared/Loading'\nimport styled from 'styled-components'\nimport BottomBar from '../Session/BottomBar'\nimport TopBarSecondary from '../Session/TopBarSecondary'\nimport { RadioBox, FlagButton, DragAndDrop } from '../Shared/Elements'\nimport { useDidMountEffect } from '../../utils/helpers';\nimport { BiCalculator, BiBook } from \"react-icons/bi\";\nimport Calculator from '../Calculator/calculator'\nimport { ThemedModal, DraggableWindow } from '../Shared/Elements'\nimport { HotKeys } from \"react-hotkeys\";\n\nconst mapDispatchToProps = { finishSession, getQuestionDetail, createResponse, reviewSection, getSessionResponses, flagResponse }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Question = (props) => {\n\n  useDidMountEffect(() => {\n    props.getSessionResponses(\n      props.session.currentSession.session_id,\n      \"section\",\n      props.session.currentSection.section_id\n    )\n  }, [props.session.newResponse])\n\n  if (!props.session.currentQuestion) return null\n\n  return (\n    <>\n      <DraggableWindow\n        isOpen={props.calculatorModalIsOpen}\n        setClose={() => {\n          props.setCalculatorModalIsOpen(false)\n        }}\n        title=\"Calculator\"\n      >\n        <Calculator />\n      </DraggableWindow>\n\n      <DraggableWindow\n        isOpen={props.scratchpadModalIsOpen}\n        setClose={() => {\n          props.setScratchpadModalIsOpen(false)\n        }}\n        title=\"Scratch Pad\"\n      >\n        <textarea rows=\"20\" cols=\"50\"></textarea>\n      </DraggableWindow>\n\n      {props.session.currentStem.layout === \"side by side\" || !props.session.currentStem.layout ?\n        <Border />\n        : null}\n\n      <TopBarSecondary\n        leftContent={() => {\n          return (\n            <>\n              <TopLink\n                onClick={() => {\n                  props.setCalculatorModalIsOpen(true)\n                }}\n              >\n                <BiCalculator color=\"white\" size={20} /> Calculator\n              </TopLink>\n\n              <TopLink\n                onClick={() => {\n                  props.setScratchpadModalIsOpen(true)\n                }}\n              >\n                <BiBook color=\"white\" size={20} /> Scratch Pad\n              </TopLink>\n            </>\n          )\n        }}\n        rightContent={() => {\n          return (\n            <>\n              <TopLink>\n                <FlagButton\n                  flagged={\n                    props.session.sessionResponses.find(item => item.question_id === props.session.currentQuestion.question_id) ?\n                      props.session.sessionResponses.find(item => item.question_id === props.session.currentQuestion.question_id).flagged\n                      : false}\n\n                  action={(flagged) => {\n                    props.flagResponse(\n                      props.session.currentSession.session_id,\n                      props.session.currentQuestion.question_id,\n                      props.auth.userData.student_id,\n                      props.session.currentSection.section_id,\n                      flagged\n                    )\n                  }}\n                />\n              </TopLink>\n              <TopLink>\n                Question {props.session.currentQuestionOrder.indexOf(props.session.currentQuestion.question_id) + 1} of {props.session.currentQuestionOrder.length}\n              </TopLink>\n            </>\n          )\n        }}\n      />\n      {!props.session.isFetchingQuestionDetail ?\n        <Container>\n          <MainContent\n            layout={props.session.currentStem.layout ? props.session.currentStem.layout : \"side by side\"}\n          >\n            {props.session.currentStem ?\n              <QuestionStem\n                layout={props.session.currentStem.layout ? props.session.currentStem.layout : \"side by side\"}\n              >\n                {props.session.currentStem.text ?\n                  <QuestionStemText>\n                    {props.session.currentStem.text.split(\"<br/>\").map((para) => {\n                      return (\n                        <>\n                          {para} <br />\n                        </>\n                      )\n                    })}\n                  </QuestionStemText>\n                  : null}\n                <QuestionStemImage src={props.session.currentStem.image} />\n              </QuestionStem>\n              : null}\n            <QuestionContent\n              layout={props.session.currentStem.layout ? props.session.currentStem.layout : \"side by side\"}\n            >\n              {props.session.currentQuestion.question ?\n                <Text>\n                  {props.session.currentQuestion.question}\n                </Text>\n                : null}\n\n              {props.session.currentQuestion.image ?\n                <QuestionImage src={props.session.currentQuestion.image} />\n                : null}\n\n              {props.session.currentQuestion.type === \"MC\" || props.session.currentQuestion.type === \"MCSJ\" ?\n                <RadioBox\n                  options={props.session.currentQuestion.options}\n                  images={props.session.currentQuestion.option_images}\n                  onClick={(item) => {\n                    props.createResponse(\n                      props.session.currentSession.session_id,\n                      props.session.currentQuestion.question_id,\n                      props.auth.userData.student_id,\n                      props.session.currentSection.section_id,\n                      item,\n                      props.session.currentQuestion.answer,\n                      props.session.currentQuestion.type,\n                      props.session.currentStem ? props.session.currentStem.stem_id : null,\n                      props.session.currentQuestion.options\n                    )\n                  }}\n                  defaultValue={() => {\n                    const response = props.session.sessionResponses.find(\n                      item => item.question_id === props.session.currentQuestion.question_id\n                    )\n\n                    if (response) {\n                      return response.value\n                    } else {\n                      return null\n                    }\n\n                  }}\n                />\n                : props.session.currentQuestion.type === \"DD\" ?\n                  <DragAndDrop\n                    options={props.session.currentQuestion.options}\n                    onClick={(item) => {\n                      props.createResponse(\n                        props.session.currentSession.session_id,\n                        props.session.currentQuestion.question_id,\n                        props.auth.userData.student_id,\n                        props.session.currentSection.section_id,\n                        item,\n                        props.session.currentQuestion.answer,\n                        props.session.currentQuestion.type,\n                        props.session.currentStem ? props.session.currentStem.stem_id : null\n                      )\n                    }}\n                    defaultValue={() => {\n                      const response = props.session.sessionResponses.find(\n                        item => item.question_id === props.session.currentQuestion.question_id\n                      )\n                      if (response && response.value && response.value.split(\";\").length > 0) {\n                        return response.value.split(\";\")\n                      } else {\n                        return null\n                      }\n                    }}\n                  />\n                  : null}\n            </QuestionContent>\n          </MainContent>\n\n        </Container >\n        : <Loading duringSession={true} />\n      }\n      <BottomBar\n        leftContent={() => (\n          <>\n            <ThemedModal\n              heading=\"End Exam\"\n              body=\"Are you sure you want to end this practice test?\"\n              button={(setIsOpen) => (\n                <LinkLeft\n                  onClick={() => {\n                    setIsOpen(true)\n                  }}\n                >\n                  End Exam\n                </LinkLeft>\n              )}\n              onClick={(setIsOpen) => {\n                props.finishSession(props.session.currentSession.session_id, props.session.currentStructure)\n\n                setIsOpen(false)\n              }}\n              onClickNo={(setIsOpen) => {\n                setIsOpen(false)\n              }}\n            />\n            {props.session.currentSession.show_review ?\n              <LinkLeft\n                onClick={() => {\n                  props.reviewSection(props.session.currentSession.session_id)\n                }}\n              >\n                Review Screen\n            </LinkLeft>\n              : null}\n          </>\n        )}\n\n        rightContent={() => (\n          <>\n            {props.session.currentQuestion.question_id !== props.session.currentQuestionOrder[0] ?\n              <LinkRight\n                onClick={() => {\n                  const currentQuestionId = props.session.currentQuestion.question_id\n                  const currentQuestionIndex = props.session.currentQuestionOrder.indexOf(currentQuestionId)\n                  const nextQuestion = props.session.currentQuestionOrder[currentQuestionIndex - 1]\n                  props.getQuestionDetail(nextQuestion)\n                }}\n              >\n                Previous\n              </LinkRight>\n              : null}\n\n            {props.session.currentQuestion.question_id !== props.session.currentQuestionOrder.slice(-1)[0] ?\n              <LinkRight\n                onClick={() => {\n                  const currentQuestionId = props.session.currentQuestion.question_id\n                  const currentQuestionIndex = props.session.currentQuestionOrder.indexOf(currentQuestionId)\n                  const nextQuestion = props.session.currentQuestionOrder[currentQuestionIndex + 1]\n                  props.getQuestionDetail(nextQuestion)\n                }}\n              >\n                Next\n              </LinkRight>\n              :\n              <LinkRight\n                onClick={() => {\n                  props.reviewSection(props.session.currentSession.session_id)\n                }}\n              >\n                Next\n              </LinkRight>\n            }\n          </>\n        )}\n      />\n\n    </>\n  )\n}\n\nconst Border = styled.div`\n  width: 7px;\n  position: fixed;\n  left: 58.5%;\n  height: 100vh;\n  background: #056DAA;\n`\n\nconst Container = styled.div`\n  padding: 0 30px 0 30px;\n`\n\nconst Text = styled.div`\n  font-family: arial;\n  font-size: 16px;\n  margin-bottom: 30px;\n`\n\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: ${props => props.layout.toLowerCase() == \"normal\" ? \"column\" : \"row\"};\n  align-items: flex-start;\n`\n\nconst QuestionContent = styled.div`\n  ${props => props.layout.toLowerCase() == \"normal\" ? '' : 'flex: 2;'}\n  width: ${props => props.layout.toLowerCase() == \"normal\" ? '100%' : 0};\n  padding: 30px 0 50px 0;\n`\n\nconst QuestionStem = styled.div`\n  ${props => props.layout.toLowerCase() == \"normal\" ? '' : 'flex: 3;'}\n  width: ${props => props.layout.toLowerCase() == \"normal\" ? 'auto' : 0};\n  margin-right: 40px;\n  font-family: arial;\n  text-align: justify;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-right: 30px;\n  padding-top: 30px;\n`\n\nconst QuestionStemText = styled.div`\n  margin-bottom: 25px;\n`\n\nconst QuestionStemImage = styled.img`\n  max-width: 70%;\n`\n\nconst QuestionImage = styled.img`\n  max-width: 30%;\n  margin-bottom: 20px;\n`\n\nconst LinkLeft = styled.div`\n  color: white;\n  cursor: pointer;\n  border-right: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst LinkRight = styled.div`\n  color: white;\n  cursor: pointer;\n  border-left: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst TopLink = styled.div`\n  color: white;\n  padding: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  \n  svg{\n    margin-right: 5px;\n  }\n`\n\nconst ModalTitle = styled.div`\n  font-family: arial;\n  font-weight: bold;\n  font-size: 20px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 100%;\n`\n\nconst CloseButton = styled.div`\n  cursor: pointer;\n`\n\nconst ModalText = styled.div`\n\n`\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Question)\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { getQuestionDetail, createResponse, reviewSection, getSessionResponses, flagResponse, changeMode } from '../../actions/session'\nimport Loading from '../Shared/Loading'\nimport styled from 'styled-components'\nimport BottomBar from './BottomBar'\nimport { RadioBoxAnswer, DragAndDropReview } from '../Shared/Elements'\nimport { useDidMountEffect } from '../../utils/helpers';\nimport TopBarSecondary from '../Session/TopBarSecondary'\nimport { BiCalculator, BiBook } from \"react-icons/bi\";\nimport Modal from 'react-modal';\nimport { TiTimes } from \"react-icons/ti\";\nimport Calculator from '../Calculator/calculator'\n\n\nconst mapDispatchToProps = { getQuestionDetail, createResponse, reviewSection, getSessionResponses, flagResponse, changeMode }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    margin: '0 20px',\n    transform: 'translate(-50%, -50%)',\n  }\n};\n\nModal.setAppElement('#root')\n\nconst Answer = (props) => {\n  const [explanationModalIsOpen, setExplanationModalIsOpen] = useState(false);\n  const [scratchpadModalIsOpen, setScratchpadModalIsOpen] = useState(false);\n  const [calculatorModalIsOpen, setCalculatorModalIsOpen] = useState(false);\n\n  useDidMountEffect(() => {\n    props.getSessionResponses(\n      props.session.currentSession.session_id,\n      \"section\",\n      props.session.currentSection.section_id\n    )\n  }, [props.session.newResponse])\n\n  if (!props.session.currentQuestion) return null\n\n  return (\n    <>\n      {props.session.currentStem.layout === \"side by side\" || !props.session.currentStem.layout ?\n        <Border />\n        : null}\n      <TopBarSecondary\n        leftContent={() => {\n          return (\n            <>\n              <TopLink\n                onClick={() => {\n                  setCalculatorModalIsOpen(true)\n                }}\n              >\n                <BiCalculator color=\"white\" size={20} /> Calculator\n              </TopLink>\n              <Modal\n                isOpen={calculatorModalIsOpen}\n                onRequestClose={() => {\n                  setCalculatorModalIsOpen(false)\n                }}\n                style={customStyles}\n              >\n                <Calculator />\n              </Modal>\n\n              <TopLink\n                onClick={() => {\n                  setScratchpadModalIsOpen(true)\n                }}\n              >\n                <BiBook color=\"white\" size={20} /> Scratch Pad\n              </TopLink>\n              <Modal\n                isOpen={scratchpadModalIsOpen}\n                onRequestClose={() => {\n                  setScratchpadModalIsOpen(false)\n                }}\n                style={customStyles}\n              >\n                <ModalTitle>\n                  <ModalText>Scratch Pad</ModalText>\n                  <CloseButton\n                    onClick={() => {\n                      setScratchpadModalIsOpen(false)\n                    }}\n                  >\n                    <TiTimes size={30} />\n                  </CloseButton>\n                </ModalTitle>\n                <textarea rows=\"20\" cols=\"50\"></textarea>\n              </Modal>\n\n              <TopLink onClick={() => {\n                setExplanationModalIsOpen(true)\n              }}>\n                Show Explanation\n              </TopLink>\n              <Modal\n                isOpen={explanationModalIsOpen}\n                onRequestClose={() => {\n                  setExplanationModalIsOpen(false)\n                }}\n                style={customStyles}\n              >\n                <ExplanationContent>\n                  <ExplanationTitle>\n                    <ExplanationText>Explanation</ExplanationText>\n                    <CloseButton\n                      onClick={() => {\n                        setExplanationModalIsOpen(false)\n                      }}\n                    >\n                      <TiTimes size={30} />\n                    </CloseButton>\n\n                  </ExplanationTitle>\n                  {props.session.currentQuestion.explanation ?\n                    <ExplanationText>\n                      {props.session.currentQuestion.explanation.split(\"<br/>\").map((para) => {\n                        return (\n                          <>\n                            {para} <br />\n                          </>\n                        )\n                      })}\n                      {}\n                    </ExplanationText>\n                    :\n                    <ExplanationText>\n                      There is no explanation for this question.\n                      </ExplanationText>\n\n                  }\n                </ExplanationContent>\n              </Modal>\n            </>\n          )\n        }}\n        rightContent={() => {\n          return (\n            <>\n              <TopLink>\n                Question {props.session.currentQuestionOrder.indexOf(props.session.currentQuestion.question_id) + 1} of {props.session.currentQuestionOrder.length}\n              </TopLink>\n            </>\n          )\n        }}\n      />\n      {!props.session.isFetchingQuestionDetail ?\n        <Container>\n\n          <MainContent\n            layout={props.session.currentStem.layout ? props.session.currentStem.layout : \"side by side\"}\n          >\n            {props.session.currentStem ?\n              <QuestionStem\n                layout={props.session.currentStem.layout ? props.session.currentStem.layout : \"side by side\"}>\n                {props.session.currentStem.text ?\n                  <QuestionStemText>\n                    {props.session.currentStem.text.split(\"<br/>\").map((para) => {\n                      return (\n                        <>\n                          {para} <br />\n                        </>\n                      )\n                    })}\n                  </QuestionStemText>\n                  : null}\n                <QuestionStemImage src={props.session.currentStem.image} />\n              </QuestionStem>\n              : null}\n            <QuestionContent\n              layout={props.session.currentStem.layout ? props.session.currentStem.layout : \"side by side\"}\n            >\n              {props.session.currentQuestion.question ?\n                <Text>\n                  {props.session.currentQuestion.question}\n                </Text>\n                : null}\n\n              {props.session.currentQuestion.image ?\n                <QuestionImage src={props.session.currentQuestion.image} />\n                : null}\n\n              {props.session.currentQuestion.type === \"MC\" || props.session.currentQuestion.type === \"MCSJ\" ?\n                <RadioBoxAnswer\n                  options={props.session.currentQuestion.options}\n                  images={props.session.currentQuestion.option_images}\n                  correctValue={props.session.currentQuestion.answer}\n                  selectedValue={() => {\n                    const response = props.session.sessionResponses.find(\n                      item => item.question_id === props.session.currentQuestion.question_id\n                    )\n                    if (response) {\n                      return response.value\n                    } else {\n                      return null\n                    }\n                  }}\n                />\n                : props.session.currentQuestion.type === \"DD\" ?\n                  <DragAndDropReview\n                    options={props.session.currentQuestion.options}\n                    correctValue={props.session.currentQuestion.answer.split(\";\")}\n                    selectedValue={() => {\n                      const response = props.session.sessionResponses.find(\n                        item => item.question_id === props.session.currentQuestion.question_id\n                      )\n                      if (response && response.value.split(\";\").length > 0) {\n                        return response.value.split(\";\")\n                      } else {\n                        return null\n                      }\n                    }}\n                  />\n                  : null}\n            </QuestionContent>\n          </MainContent>\n\n        </Container >\n        : <Loading duringSession={true} />\n      }\n\n      <BottomBar\n        leftContent={() => (\n          <>\n            <LinkLeft\n              onClick={() => {\n                props.changeMode(\"results\")\n              }}\n            >\n              Return to Results\n            </LinkLeft>\n          </>\n        )}\n\n        rightContent={() => (\n          <>\n            {props.session.currentQuestion.question_id !== props.session.currentQuestionOrder[0] ?\n              <LinkRight\n                onClick={() => {\n                  const currentQuestionId = props.session.currentQuestion.question_id\n                  const currentQuestionIndex = props.session.currentQuestionOrder.indexOf(currentQuestionId)\n                  const nextQuestion = props.session.currentQuestionOrder[currentQuestionIndex - 1]\n                  props.getQuestionDetail(nextQuestion, \"answer\")\n                }}\n              >\n                Previous\n              </LinkRight>\n              : null}\n\n            {props.session.currentQuestion.question_id !== props.session.currentQuestionOrder.slice(-1)[0] ?\n              <LinkRight\n                onClick={() => {\n                  const currentQuestionId = props.session.currentQuestion.question_id\n                  const currentQuestionIndex = props.session.currentQuestionOrder.indexOf(currentQuestionId)\n                  const nextQuestion = props.session.currentQuestionOrder[currentQuestionIndex + 1]\n                  props.getQuestionDetail(nextQuestion, \"answer\")\n                }}\n              >\n                Next\n              </LinkRight>\n              :\n              null}\n          </>\n        )}\n      />\n\n    </>\n  )\n}\n\nconst ExplanationContent = styled.div`\n  margin: 25px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start\n`\n\nconst ExplanationText = styled.div`\n\n`\n\nconst ExplanationTitle = styled.div`\n  font-family: arial;\n  font-weight: bold;\n  font-size: 20px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 100%;\n`\n\nconst Container = styled.div`\n  padding: 0 30px 0 30px;\n`\n\nconst Text = styled.div`\n  font-family: arial;\n  font-size: 16px;\n  margin-bottom: 30px;\n`\n\nconst MainContent = styled.div`\n  display: flex;\n  flex-direction: ${props => props.layout == \"normal\" ? \"column\" : \"row\"};\n  align-items: flex-start;\n`\n\nconst QuestionContent = styled.div`\n  ${props => props.layout == \"normal\" ? '' : 'flex: 2;'}\n  width: ${props => props.layout == \"normal\" ? '100%' : 0};\n  padding: 30px 0 50px 0;\n`\n\nconst QuestionStem = styled.div`\n  ${props => props.layout == \"normal\" ? '' : 'flex: 3;'}\n  width: ${props => props.layout == \"normal\" ? 'auto' : 0};\n  margin-right: 40px;\n  font-family: arial;\n  text-align: justify;\n  font-size: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding-right: 30px;\n  padding-top: 30px;\n`\n\nconst QuestionStemText = styled.div`\n  margin-bottom: 25px;\n`\n\nconst QuestionStemImage = styled.img`\n  max-width: 70%;\n`\n\nconst QuestionImage = styled.img`\n  max-width: 30%;\n  margin-bottom: 20px;\n`\n\n\nconst LinkLeft = styled.div`\n  color: white;\n  cursor: pointer;\n  border-right: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst LinkRight = styled.div`\n  color: white;\n  cursor: pointer;\n  border-left: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst TopLink = styled.div`\n  color: white;\n  padding: 15px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  \n  svg{\n    margin-right: 5px;\n  }\n`\n\nconst ModalTitle = styled.div`\n  font-family: arial;\n  font-weight: bold;\n  font-size: 20px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n  width: 100%;\n`\n\nconst CloseButton = styled.div`\n  cursor: pointer;\n`\n\nconst ModalText = styled.div`\n\n`\n\nconst Border = styled.div`\n  width: 7px;\n  position: fixed;\n  left: 58.5%;\n  height: 100vh;\n  background: #056DAA;\n`\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Answer)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RiFlag2Fill, RiFlag2Line } from \"react-icons/ri\";\nconst ReviewCards = ({\n  section,\n  responses,\n  onClick,\n  mode\n}) => {\n  return (\n    <Container>\n      <QuestionCards>\n        {section.question_order.map((question_id, i) => {\n          const answered = responses.find(item => item.question_id === question_id)\n\n          return (\n            <Card key={i}\n            >\n              <CardLeft>\n                <div onClick={() => {\n\n                }}>\n                  {answered && answered.flagged ?\n                    <RiFlag2Fill color={'black'} size={20} />\n                    :\n                    <RiFlag2Line color={'black'} size={20} />\n                  }\n                </div>\n                <Text color=\"black\" onClick={() => {\n                  onClick(question_id, section)\n                }}>Question {i + 1}</Text>\n              </CardLeft>\n              <CardRight>\n                {answered && answered.value ?\n                  <>\n                    {mode === \"Results\" ?\n                      <>\n                        {answered.points === 1 ?\n                          <Text color=\"green\">Correct</Text>\n                          : answered.points === 0 ?\n                            <Text color=\"red\">Incorrect</Text>\n                            :\n                            <Text color=\"blue\">Partially Correct</Text>\n                        }\n                      </>\n                      : null\n                    }\n                  </>\n                  :\n                  <Text\n                    color=\"#f89800\"\n                  >\n                    Incomplete\n                  </Text>\n                }\n              </CardRight>\n\n\n            </Card>\n          )\n        })}\n      </QuestionCards>\n    </Container>\n  )\n}\n\nexport default ReviewCards\n\nconst Container = styled.div`\n`\n\nconst CardLeft = styled.div`\n  display: flex;\n\n  svg {\n    margin-right: 5px;\n  }\n`\n\nconst CardRight = styled.div`\n\n`\n\nconst QuestionCards = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\nconst Card = styled.div`\n  background: ${props => props.answered ? '#2ecfb0' : 'white'};\n  color: ${props => props.answered ? 'white' : 'black'};\n\n  padding: 10px;\n  \n  border-left: 1px solid #aaaaaa;\n  border-bottom: 1px solid #aaaaaa;\n\n  flex-basis: 31.75%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n\n  &:nth-child(3n), &:last-child {\n    border-right: 1px solid #aaaaaa;\n  }\n  \n  &:nth-child(-n+3) {\n    border-top: 1px solid #aaaaaa;\n  }\n\n`\n\nconst Text = styled.div`\n  color: ${props => props.color};\n`","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { getSessionResponses, stopReview, getQuestionDetail, nextSection, finishSession, reviewQuestions } from '../../actions/session'\nimport BottomBar from '../Session/BottomBar'\nimport TopBarSecondary from '../Session/TopBarSecondary'\nimport styled from 'styled-components'\nimport { getIncompleteQuestions, filterResponses } from '../../utils/helpers'\nimport ReviewCards from './ReviewCards'\nimport { ThemedModal } from '../Shared/Elements'\n\nconst mapDispatchToProps = { getSessionResponses, stopReview, getQuestionDetail, nextSection, finishSession, reviewQuestions }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Review = (props) => {\n  const incompleteQuestions = getIncompleteQuestions(props.session.currentSection.question_order, props.session.sessionResponses)\n  const flaggedQuestions = filterResponses(props.session.sessionResponses, \"flagged\")\n\n  useEffect(() => {\n    props.reviewQuestions(props.session.currentSection.question_order)\n  }, [])\n\n  return (\n    <>\n      <TopBarSecondary\n        leftContent={() => {\n          return null\n        }}\n        rightContent={() => {\n          return null\n        }}\n      />\n      <Container>\n        <Title>{props.session.currentSection.name} Review Screen</Title>\n\n        <Description>\n          <p>Below is a summary of your answers. You can review your questions in three (3) different ways.</p>\n\n          <p>The buttons in the lower right-hand corner correspond to these choices:</p>\n          <p>\n            1. Review all of your questions and answers.\n          </p>\n          <p>\n            2. Review questions that are incomplete.\n          </p>\n          <p>\n            3. Review questions that are flagged for review. (Click the 'flag' icon to change the flag for review status.)\n          </p>\n\n          <p>\n            You may also click on a question number to link directly to its location in the exam.\n          </p>\n\n        </Description>\n\n        <ReviewCards\n          section={props.session.currentSection}\n          responses={props.session.sessionResponses}\n          onClick={(question_id) => {\n            props.getQuestionDetail(question_id)\n          }}\n          mode=\"Review\"\n        />\n      </Container >\n      <BottomBar\n        rightContent={() => (\n          <>\n            {incompleteQuestions.length > 0 ?\n              <LinkRight\n                onClick={() => {\n                  props.reviewQuestions(incompleteQuestions)\n                  props.getQuestionDetail(incompleteQuestions[0])\n                }}\n              >\n                Review Incomplete\n              </LinkRight>\n              : null}\n\n            {flaggedQuestions.length > 0 ?\n              <LinkRight\n                onClick={() => {\n                  props.reviewQuestions(flaggedQuestions)\n                  props.getQuestionDetail(flaggedQuestions[0])\n                }}\n              >\n                Review Flagged\n              </LinkRight>\n              : null}\n\n            <LinkRight\n              onClick={() => {\n                props.getQuestionDetail(props.session.currentSection.question_order[0])\n              }}\n            >\n              Review All\n              </LinkRight>\n          </>\n        )}\n\n        leftContent={() => (\n          <>\n            {props.session.currentSection.section_id !== props.session.currentStructure.section_order.slice(-1)[0]\n              ?\n              <ThemedModal\n                heading=\"End Review\"\n                body=\"Are you sure you want to end this review?\"\n                button={(setIsOpen) => (\n                  <LinkLeft\n                    onClick={() => {\n                      setIsOpen(true)\n                    }}\n                  >\n                    End Review\n                  </LinkLeft>\n                )}\n                onClick={(setIsOpen) => {\n                  const currentSectionId = props.session.currentSection.section_id\n                  const currentSectionIndex = props.session.currentStructure.section_order.indexOf(currentSectionId)\n                  props.nextSection(\n                    props.session.currentSession.session_id,\n                    props.session.currentStructure.section_order[currentSectionIndex + 1]\n                  )\n                  setIsOpen(false)\n                }}\n                onClickNo={(setIsOpen) => {\n                  setIsOpen(false)\n                }}\n              />\n              :\n\n              <ThemedModal\n                heading=\"End Exam\"\n                body=\"Are you sure you want to end this practice test?\"\n                button={(setIsOpen) => (\n                  <LinkLeft\n                    onClick={() => {\n                      setIsOpen(true)\n                    }}\n                  >\n                    Finish Exam\n                  </LinkLeft>\n                )}\n                onClick={(setIsOpen) => {\n                  props.finishSession(props.session.currentSession.session_id, props.session.currentStructure)\n\n                  setIsOpen(false)\n                }}\n                onClickNo={(setIsOpen) => {\n                  setIsOpen(false)\n                }}\n              />\n\n            }\n          </>\n        )}\n      />\n    </>\n  )\n}\n\nconst Description = styled.div`\n  margin: 40px 0;\n`\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-family: arial;\n  font-weight: bold;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst Container = styled.div`\n  padding: 30px 30px 60px 30px;\n`\nconst LinkLeft = styled.div`\n  color: white;\n  cursor: pointer;\n  border-right: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst LinkRight = styled.div`\n  color: white;\n  cursor: pointer;\n  border-left: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Review)\n","import React from 'react'\n\n\nexport const decision_making_description = () => {\n  return (\n    <>\n      <p>In this section of the exam, you will be presented with questions that may refer to text, charts or graphs. Additional information may be presented within the question itself. All questions are standalone and do not share data.</p>\n\n      <p>Some questions will have four answer options but only one correct answer; others will require you to respond to five statements by placing a 'yes' or 'no' answer next to each statement.</p>\n    </>\n  )\n}\n\nexport const quantitative_reasoning_description = () => {\n  return (\n    <>\n      <p>In this section of the exam, you will be presented with questions that most often refer to charts and graphs containing data. Additional information may also be found within the question itself. Most questions will be shown as sets of four questions each connected to the same data. There are some questions that standalone and do not share data. Each question has five answer options. Your task is to choose the best option.</p>\n\n      <p>An onscreen calculator is available to assist you with this section – you can access this by clicking on the button at the top left of the screen.</p>\n    </>\n  )\n}\n\nexport const verbal_reasoning_description = () => {\n  return (\n    <>\n      <p>\n        In this section of the exam, you will be presented with 11 passages to read, each associated with 4 questions.\n      </p>\n      <p>\n        Some questions assess critical reasoning skills, requiring candidates to make inferences and draw conclusions from information.  You will need to read the passage of text carefully.  You will then be presented with a question or incomplete statement and four response options. You are required to pick the best or most suitable response.\n      </p>\n      <p>\n        For other questions your task is to read each passage of text carefully and then decide whether the statement provided follows logically.  There are three answer options you can choose from\n      </p>\n      <p>\n        True: On the basis of the information in the passage, the statement is true.\n      </p>\n      <p>\n        False: On the basis of the information in the passage, the statement is false.\n      </p>\n      <p>\n        Can’t Tell: You cannot tell from the information in the passage whether the statement is true or false.\n      </p>\n      <p>\n        Candidates will only be able to select one response.\n      </p>\n\n    </>\n  )\n}\n\nexport const abstract_reasoning_description = () => {\n  return (\n    <>\n      <p>\n        There are 4 different question types in this section of the exam.\n      </p>\n      <p>\n        For type 1, you will be presented with two sets of shapes labelled “Set A” and “Set B”. You will be given a test shape and asked to decide whether the test shape belongs to Set A, Set B, or Neither.\n      </p>\n      <p>\n        For type 2, you will be presented with a series of shapes. You will be asked to select the next shape in the series.\n      </p>\n      <p>\n        For type 3, you will be presented with a statement, involving a group of shapes. You will be asked to determine which shape completes the statement.\n      </p>\n      <p>\n        For type 4, you will be presented with two sets of shapes labelled “Set A” and “Set B”. You will be asked to select which of the four response options belongs to Set A or Set B.\n      </p>\n      <p>\n        You will have 13 minutes to answer 55 questions.It is in your best interest to answer all questions as there is no penalty for guessing. All unanswered questions will be scored as incorrect.\n      </p>\n    </>\n  )\n}\n\nexport const situational_judgement_description = () => {\n  return (\n    <>\n      <p>\n        You will be presented with a set of hypothetical scenarios based in a clinical setting or during educational training for a medical or dental career. These may involve a student or clinician at their centre.\n      </p>\n      <p>\n        Please read each scenario carefully.\n      </p>\n      <p>\n        This subtest consists of two parts. For Part One you will be asked to rate the importance of a series of statements in response to the scenario.\n      </p>\n      <p>\n        For Part Two you will be asked to rate the appropriateness of a series of statements in response to the scenario.\n      </p>\n      <p>\n        Some of the questions will require that you rate each response from four possible options. Other questions will require you to choose the most and least appropriate action to take in response to the situation, from the three actions provided.\n      </p>\n      <p>\n        Please remember that in the live test you will be given a banded result for this section but you will not be given a score.\n      </p>\n    </>\n  )\n}\n\nexport const descriptions = {\n  \"Decision Making\": decision_making_description,\n  \"Quantitative Reasoning\": quantitative_reasoning_description,\n  \"Verbal Reasoning\": verbal_reasoning_description,\n  \"Abstract Reasoning\": abstract_reasoning_description,\n  \"Situational Judgment\": situational_judgement_description\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { stopSectionStart } from '../../actions/session'\nimport Loading from '../Shared/Loading'\nimport BottomBar from '../Session/BottomBar'\nimport TopBarSecondary from '../Session/TopBarSecondary'\nimport styled from 'styled-components'\nimport { descriptions } from '../../constants/section_descriptions'\n\nconst mapDispatchToProps = { stopSectionStart }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Start = (props) => {\n\n  if (props.session.isFetchingSession) return <Loading duringSession={true} />\n  if (!props.session.currentSection || !props.session.currentSession) return null\n\n  return (\n    <>\n      <TopBarSecondary\n        leftContent={() => {\n          return null\n        }}\n        rightContent={() => {\n          return null\n        }}\n      />\n      <Container>\n        {props.session.currentStructure.type === \"Exam\" || props.session.currentStructure.type === \"Mock\" ?\n          <>\n            <WelcomeMessage>\n              <UCATLogo src=\"https://practice.ucat.ac.uk/img/logo.png\" />\n          UCAT PRACTICE TEST\n        </WelcomeMessage>\n\n            <Description>\n              <DescriptionTitle>\n                {props.session.currentSection.name}\n              </DescriptionTitle>\n              {descriptions[props.session.currentSection.name] ? descriptions[props.session.currentSection.name]() : null}\n            </Description>\n\n            <Info>\n              In this section, you will have <b>{props.session.currentSection.time}</b> minutes to answer <b>{props.session.currentSection.question_order.length}</b> questions.\n        </Info>\n\n            <Warning>\n              Once you start the timer, you cannot pause this section.\n        </Warning>\n          </>\n          :\n          <>\n            <WelcomeMessage>\n              <UCATLogo src=\"https://practice.ucat.ac.uk/img/logo.png\" />\n          UCAT PRACTICE\n        </WelcomeMessage>\n\n            <Description>\n              <DescriptionTitle>\n                {props.session.currentSection.name}\n              </DescriptionTitle>\n              {descriptions[props.session.currentSection.name] ? descriptions[props.session.currentSection.name]() : null}\n            </Description>\n\n            <Info>\n              In this section, you will be tested on <b>{props.session.currentSection.question_order.length}</b> practice questions related to your selected topic.\n        </Info>\n          </>\n        }\n      </Container>\n\n\n      <BottomBar\n        leftContent={() => (\n          <LinkLeft\n            onClick={() => {\n              props.returnHome();\n            }}\n          >I don't want to start this section now\n          </LinkLeft>\n        )}\n\n        rightContent={() => (\n          <LinkRight\n            onClick={() => {\n              props.stopSectionStart(props.session.currentSession.session_id)\n            }}\n          >\n            Start Section\n          </LinkRight>\n        )}\n\n      />\n\n    </>\n  )\n}\n\nconst Container = styled.div`\n  padding: 30px;\n`\n\nconst WelcomeMessage = styled.div`\n  font-family: arial;\n  font-weight: bold;\n  text-transform: uppercase;\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst UCATLogo = styled.img`\n  width: 250px;\n  margin-bottom: 20px;\n`\n\nconst Info = styled.div`\n  padding-bottom: 20px;\n`\n\nconst Warning = styled.div`\n\n`\n\nconst LinkLeft = styled.div`\n  color: white;\n  cursor: pointer;\n  border-right: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst LinkRight = styled.div`\n  color: white;\n  cursor: pointer;\n  border-left: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst Description = styled.div`\n  \n`\n\nconst DescriptionTitle = styled.div`\n  font-family: arial;\n  font-weight: bold;\n`\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Start)\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { getSessionResponses, getQuestionDetail, getSection, resetSection } from '../../actions/session'\nimport Loading from '../Shared/Loading'\nimport { Button } from '../Shared/Elements'\nimport styled from 'styled-components'\nimport {\n  Text\n} from 'rebass'\nimport { TiTick, TiTimes } from \"react-icons/ti\";\nimport BottomBar from './BottomBar'\nimport ReviewCards from './ReviewCards'\nimport TopBarSecondary from './TopBarSecondary'\n\nconst mapDispatchToProps = { getSessionResponses, getQuestionDetail, getSection, resetSection }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Results = (props) => {\n\n  useEffect(() => {\n    props.getSessionResponses(props.session.currentSession.session_id, \"structure\")\n    props.resetSection()\n    // return () => {\n    //   props.stopSection()\n    // }\n  }, [])\n\n  if (!props.session.allSections || !props.session.currentSession || !props.session.sessionResponses) return null\n\n  return (\n    <>\n      <TopBarSecondary\n        leftContent={() => {\n          return null\n        }}\n        rightContent={() => {\n          return null\n        }}\n      />\n      {!props.session.isFetchingResponses ?\n        <Container>\n          <Title>Final Answer Review Screen</Title>\n\n          <Description>\n            <p>This review section allows you to view the answers you made and see whether they were correct or not. Each question accessed from this screen has an 'Explain Answer' button in the top left hand side. By clicking on this you will obtain an explanation as to the correct answer.</p>\n          </Description>\n\n\n          {props.session.allSections.map((section, i) => {\n            return (\n              <SectionBox\n                key={i}\n              >\n                <SectionHeader>\n                  <SectionTitle>\n                    {section.name}\n                  </SectionTitle>\n\n                  <SectionScore>\n                    {props.session.currentSession.score_breakdown[section.section_id.toString()][0]} Correct | {props.session.currentSession.score_breakdown[section.section_id.toString()][2]} Partially Correct | {props.session.currentSession.score_breakdown[section.section_id.toString()][1]} Incorrect <br />\n                    <br />\n                    <span style={{ color: 'green' }}>\n                      Score: {props.session.currentSession.score_breakdown[section.section_id.toString() + \"_scaled\"]}\n                    </span>\n                  </SectionScore>\n                </SectionHeader>\n\n                <ReviewCards\n                  section={section}\n                  responses={props.session.sessionResponses}\n                  onClick={(question_id, section) => {\n                    props.getQuestionDetail(question_id, \"answer\")\n                    props.getSection(section.section_id, section.question_order, question_id)\n                  }}\n                  mode=\"Results\"\n                />\n              </SectionBox>\n            )\n          })}\n        </Container>\n        : <Loading duringSession={true} />}\n      <BottomBar\n        rightContent={() => (\n          <>\n            {/*\n            <Button\n              label=\"Review Incorrect\"\n              type=\"secondary\"\n              color=\"orange\"\n              onClick={props.returnHome}\n            />\n            <Button\n              label=\"Review Flagged\"\n              type=\"secondary\"\n              color=\"orange\"\n              onClick={props.returnHome}\n            />\n            <Button\n              label=\"Review All\"\n              type=\"secondary\"\n              color=\"orange\"\n              onClick={props.returnHome}\n            />\n            */}\n          </>\n        )}\n\n        leftContent={() => (\n          <>\n            <LinkLeft\n              onClick={props.returnHome}\n            >\n              Return Home\n            </LinkLeft>\n          </>\n        )}\n      />\n    </>\n  )\n}\n\nconst Title = styled.div`\n  font-size: 20px;\n  font-family: arial;\n  font-weight: bold;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Description = styled.div`\n  margin: 30px 0;\n`\n\nconst Container = styled.div`\n  padding: 30px 30px 60px 30px;\n`\nconst SectionTitle = styled.div`\n  font-family: arial;\n  font-weight: bold;\n  padding: 15px 0;\n  font-size: 20px;\n`\n\nconst SectionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n`\n\nconst SectionScore = styled.div`\n  color: black;\n  padding-bottom: 10px;\n`\n\nconst SectionBox = styled.div`\n  margin: 15px 0;\n`\n\nconst LinkLeft = styled.div`\n  color: white;\n  cursor: pointer;\n  border-right: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nconst LinkRight = styled.div`\n  color: white;\n  cursor: pointer;\n  border-left: 2px solid white;\n  height: 100%;\n  padding: 15px;\n`\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Results)\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { getQuestionDetail, createResponse, reviewSection, getSessionResponses, flagResponse, getSessionDetails, resetSessionDetail, finishSession, nextSection } from '../actions/session'\nimport Loading from '../components/Shared/Loading'\nimport styled from 'styled-components'\nimport LogoImage from '../assets/in2medlogo.png'\n\nimport Question from '../components/Session/Question'\nimport Answer from '../components/Session/Answer'\nimport Review from '../components/Session/Review';\nimport Start from '../components/Session/Start';\nimport Results from '../components/Session/Results';\n\nimport { GlobalHotKeys } from \"react-hotkeys\";\n\n\nconst keyMap = {\n  SHOW_CALCULATOR: \"alt+c\",\n  PREVIOUS_QUESTION: {\n    name: 'Previous Question',\n    sequence: 'alt+p',\n    action: 'keydown'\n  },\n  FLAG_QUESTION: {\n    name: 'Flag Question',\n    sequence: 'alt+f',\n    action: 'keydown'\n  },\n  NEXT_QUESTION: {\n    name: 'Next Question',\n    sequences: ['space', 'alt+n'],\n    action: 'keydown'\n  },\n};\n\nconst mapDispatchToProps = { getSessionDetails, resetSessionDetail, finishSession, nextSection, getQuestionDetail, createResponse, reviewSection, getSessionResponses, flagResponse }\n\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Timer = ({\n  startTimestamp,\n  sectionTimeLength,\n  onFinished\n}) => {\n\n  const calculateTimeLeft = () => {\n    const totalTime = (sectionTimeLength * 60000)\n    const currentTime = new Date().getTime()\n    const startTime = new Date(startTimestamp).getTime()\n    const timeRemaining = (totalTime - (currentTime - startTime)) / 60000\n    const secondsRemaining = ((timeRemaining) - Math.floor(timeRemaining)) * 60\n    return [timeRemaining.toFixed(2), Math.floor(timeRemaining), Math.round(secondsRemaining)]\n  }\n\n  const [timeLeft, setTimeLeft] = useState(calculateTimeLeft())\n  const [timerStop, setTimerStop] = useState(false)\n\n  useEffect(() => {\n\n    if (!timerStop) {\n      const timer = setTimeout(() => {\n        setTimeLeft(calculateTimeLeft());\n\n        if (timeLeft[0] < 0) {\n          onFinished()\n          setTimerStop(true)\n        }\n      }, 1000);\n\n      return () => clearTimeout(timer);\n    }\n\n\n  })\n\n  if (!startTimestamp) return null\n\n  if (!timeLeft) return null\n\n  if (!timerStop) {\n    return (\n      <>\n        {timeLeft[1]} Mins:{timeLeft[2]} Secs left\n      </>\n    )\n  } else {\n    return (\n      <>\n        Time Expired\n      </>\n    )\n  }\n\n}\n\nconst Session = (props) => {\n  const [scratchpadModalIsOpen, setScratchpadModalIsOpen] = useState(false);\n  const [calculatorModalIsOpen, setCalculatorModalIsOpen] = useState(false);\n\n  const handlers = {\n    SHOW_CALCULATOR: () => {\n      setCalculatorModalIsOpen(true)\n    },\n    NEXT_QUESTION: () => {\n      if (props.session.currentQuestion.question_id !== props.session.currentQuestionOrder.slice(-1)[0] && props.session.mode === \"question\") {\n        const currentQuestionId = props.session.currentQuestion.question_id\n        const currentQuestionIndex = props.session.currentQuestionOrder.indexOf(currentQuestionId)\n        const nextQuestion = props.session.currentQuestionOrder[currentQuestionIndex + 1]\n\n        props.getQuestionDetail(nextQuestion)\n\n      }\n    },\n    PREVIOUS_QUESTION: () => {\n      if (props.session.currentQuestion.question_id !== props.session.currentQuestionOrder[0] && props.session.mode === \"question\") {\n        const currentQuestionId = props.session.currentQuestion.question_id\n        const currentQuestionIndex = props.session.currentQuestionOrder.indexOf(currentQuestionId)\n        const nextQuestion = props.session.currentQuestionOrder[currentQuestionIndex - 1]\n\n        props.getQuestionDetail(nextQuestion)\n\n      }\n    },\n    FLAG_QUESTION: () => {\n      const flagged = props.session.sessionResponses.find(item => item.question_id === props.session.currentQuestion.question_id) ?\n        props.session.sessionResponses.find(item => item.question_id === props.session.currentQuestion.question_id).flagged\n        : false\n\n      props.flagResponse(\n        props.session.currentSession.session_id,\n        props.session.currentQuestion.question_id,\n        props.auth.userData.student_id,\n        props.session.currentSection.section_id,\n        !flagged\n      )\n    }\n  };\n\n  useEffect(() => {\n    props.getSessionDetails(props.match.params.session_id, props.auth.userData.student_id)\n\n    return () => {\n      props.resetSessionDetail()\n    }\n  }, [])\n\n  if (props.session.isFetchingSession) return <Loading duringSession={true} />\n  if (!props.session.currentSession || !props.session.currentStructure) return null\n\n  return (\n    <GlobalHotKeys handlers={handlers} keyMap={keyMap} allowChanges={true}>\n      <SessionContainer>\n\n        <TopBar>\n          <TopBarInner>\n            <TopBarLeft>\n              {props.session.currentStructure && props.session.currentSection ?\n                <>\n                  {props.session.currentStructure.name} - {props.session.currentSection.name}\n                </>\n                : null}\n            </TopBarLeft>\n            <TopBarRight>\n              {props.session.currentStructure.type === \"Exam\" || props.session.currentStructure.type === \"Mock\" ?\n                <>\n                  {props.session.currentSession.start_time.length > 0 && props.session.currentSession.start_time.length != props.session.currentSession.end_time.length\n                    ? <Timer\n                      startTimestamp={props.session.currentSession.start_time[props.session.currentStructure.section_order.indexOf(props.session.currentSection.section_id)]}\n                      sectionTimeLength={props.session.currentSection.time}\n                      onFinished={() => {\n                        alert(\"You have run out of time!\")\n\n                        if (props.session.currentSection.section_id !== props.session.currentStructure.section_order.slice(-1)[0]) {\n                          const currentSectionId = props.session.currentSection.section_id\n                          const currentSectionIndex = props.session.currentStructure.section_order.indexOf(currentSectionId)\n                          props.nextSection(\n                            props.session.currentSession.session_id,\n                            props.session.currentStructure.section_order[currentSectionIndex + 1]\n                          )\n                        } else {\n                          props.finishSession(props.session.currentSession.session_id, props.session.currentStructure)\n                        }\n\n                      }}\n                    />\n                    : null}\n                </>\n                : null}\n            </TopBarRight>\n          </TopBarInner>\n        </TopBar>\n\n        <Container>\n\n          {props.session.mode === \"review\" ? <Review />\n            : props.session.mode === \"question\" ?\n              <Question\n                scratchpadModalIsOpen={scratchpadModalIsOpen}\n                setScratchpadModalIsOpen={setScratchpadModalIsOpen}\n                calculatorModalIsOpen={calculatorModalIsOpen}\n                setCalculatorModalIsOpen={setCalculatorModalIsOpen}\n              />\n              : props.session.mode === \"answer\" ?\n                <Answer />\n                : props.session.mode === \"start\" ?\n                  <Start\n                    returnHome={() => {\n                      props.history.push(\n                        props.session.currentStructure.type === \"Exam\" ?\n                          '/exam/' + props.session.currentSession.structure_id\n                          : props.session.currentStructure.type === \"Practice\" ?\n                            '/practice/' + props.session.currentStructure.category_id\n                            : props.session.currentStructure.type === \"Mock\" ?\n                              '/mock/' + props.session.currentStructure.structure_id\n                              : null\n                      )\n                    }}\n                  />\n                  : props.session.mode === \"results\" ?\n                    <Results\n                      returnHome={() => {\n                        props.history.push(\n                          props.session.currentStructure.type === \"Exam\" ?\n                            '/exam/' + props.session.currentSession.structure_id\n                            : props.session.currentStructure.type === \"Practice\" ?\n                              '/practice/' + props.session.currentStructure.category_id\n                              : props.session.currentStructure.type === \"Mock\" ?\n                                '/mock/' + props.session.currentStructure.structure_id\n                                : null\n                        )\n                      }}\n                    />\n                    : null\n          }\n        </Container>\n      </SessionContainer>\n    </GlobalHotKeys>\n  )\n}\n\nconst SessionContainer = styled.div`\n  background: white;\n  min-height: 100vh;\n  font-family: arial !important;\n`\n\nconst Container = styled.div`\n  padding-top: 80px;\n`\nconst TopBar = styled.div`\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.02);\n  background: #006daa;\n  color: white;\n  height: 50px;\n  width: 100%;\n  overflow: hidden;\n  position: fixed;\n  top: 0;\n  z-index: 999;\n`\n\nconst TopBarInner = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nconst TopBarLeft = styled.div`\n  padding: 30px;\n`\nconst TopBarRight = styled.div`\npadding: 30px;\n`\nexport default connect(mapStateToProps, mapDispatchToProps)(Session)\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { initUser } from '../actions/auth'\nimport styled from 'styled-components'\nimport Logo from '../assets/in2medlogo.png'\nimport { Button } from '../components/Shared/Elements'\nimport Loading from '../components/Shared/Loading'\n\nconst mapDispatchToProps = { initUser }\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Login = (props) => {\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (props.auth.userData) {\n      props.setAuthenticated(true)\n      setLoading(false)\n    }\n  }, [props.auth.userData])\n\n  return (\n    <Container>\n      <LoginLogo src={Logo} />\n      {loading ?\n        <LoadingContainer>\n          <Loading\n            duringSession={true}\n          />\n        </LoadingContainer>\n        :\n        <>\n          {\n            props.auth.error ?\n              <ErrorMessage>\n                {props.auth.error}\n              </ErrorMessage>\n              : null\n          }\n\n          <LoginBox>\n            <input type=\"text\" placeholder='Email' onChange={e => {\n              setUsername(e.target.value)\n            }} />\n            <input type=\"password\" placeholder='Password' onChange={e => {\n              setPassword(e.target.value)\n            }} />\n            <span\n              style={{\n                \"align-self\": \"flex-end\"\n              }}\n            >\n              <Button\n                type=\"primary\"\n                color=\"orange\"\n                label=\"Login\"\n                onClick={async () => {\n                  setLoading(true)\n                  await props.initUser(username, password)\n                  setLoading(false)\n                }}\n              />\n            </span>\n          </LoginBox>\n        </>\n      }\n\n    </Container>\n  )\n}\nconst LoadingContainer = styled.div`\n  margin: 70px 0;\n`\nconst LoginLogo = styled.img`\n  width: 150px;\n  margin-bottom: 20px;\n`\nconst LoginBox = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: white;\n  padding: 40px;\n  border-radius: 15px;\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.05);\n\n  input {\n    margin-bottom: 10px;\n    font-size: 15px;\n    width: 300px;\n    border-radius: 5px;\n    border: 1px solid #eeeeee;\n    padding: 10px;\n    font-family: Gilroy-Regular;\n  }\n\n`\n\nconst Container = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ErrorMessage = styled.div`\n  color: red;\n  padding: 20px;\n`\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux'\nimport { getCategories } from '../actions/content'\nimport Loading from '../components/Shared/Loading'\n\nimport styled from 'styled-components'\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\n\n\nconst mapDispatchToProps = { getCategories }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst PracticeSection = ({\n  props,\n  categories,\n  topic\n}) => {\n  return (\n    <>\n      <SectionTitle>\n        {topic}\n      </SectionTitle>\n      <ExamList>\n        {categories.filter(category => category.topic === topic).map((category, i) => {\n          if (![\"General Arithmetic\", \"Perimeter/Area/Volume\", \"Ranking Appropriateness\"].includes(category.name)) {\n            return (\n              <Card\n                onClick={() => {\n                  props.history.push('/practice/' + category.category_id)\n                }}\n              >\n                <CardTop>\n                  <CardHeading>{category.name}</CardHeading>\n                </CardTop>\n\n                <CardBottom>\n                  <CardLength>\n\n                  </CardLength>\n                  <Button>\n                    <AiOutlineArrowRight color=\"#f89800\" size={25} />\n                  </Button>\n                </CardBottom>\n\n              </Card>\n            )\n          }\n        })}\n      </ExamList>\n    </>\n  )\n}\n\nconst Practice = (props) => {\n\n  useEffect(() => {\n    props.getCategories()\n  }, [])\n\n  if (props.content.isFetchingCategories) return <Loading />\n  if (!props.content.categories) return null\n\n  return (\n    <Container>\n      <Title>Practice</Title>\n      <PracticeSection\n        props={props}\n        categories={props.content.categories}\n        topic=\"Verbal Reasoning\"\n      />\n      <PracticeSection\n        props={props}\n        categories={props.content.categories}\n        topic=\"Decision Making\"\n      />\n      <PracticeSection\n        props={props}\n        categories={props.content.categories}\n        topic=\"Quantitative Reasoning\"\n      />\n      <PracticeSection\n        props={props}\n        categories={props.content.categories}\n        topic=\"Abstract Reasoning\"\n      />\n      <PracticeSection\n        props={props}\n        categories={props.content.categories}\n        topic=\"Situational Judgement\"\n      />\n    </Container>\n  )\n}\n\nconst Title = styled.div`\n  color: rgba(0,0,0,0.25);\n  font-family: Gilroy-Regular;\n  font-size: 17px;\n  padding: 15px 0;\n`\nconst Container = styled.div`\n  padding: 30px;\n  margin-left: 340px;\n`\n\nconst ExamList = styled.div`\n  display: flex;\n  margin-top: 21px;\n  flex-wrap: wrap;\n`\n\nconst CardHeading = styled.div`\n  font-family: Gilroy-Medium;\n  font-size: 18px;\n`\n\nconst CardText = styled.div`\n  font-family: Gilroy-Medium;\n  font-size: 15px;\n`\n\nconst CardLength = styled.div`\n  color: rgba(0,0,0,0.3);\n  justify-content: center;\n`\n\nconst CardTop = styled.div`\n`\n\nconst CardBottom = styled.div`\n  flex-direction: row;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between\n`\n\nconst Button = styled.div`\n`\n\nconst Card = styled.div`\n  background: white;\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.05);\n  padding: 20px;\n  border-radius: 15px;\n  width: 200px;\n  height: 100px;\n  margin-right: 20px;\n  cursor: pointer;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 20px;\n`\nconst SectionTitle = styled.div`\n  font-size: 20px;\n  font-family: Gilroy-Bold;\n  margin-top: 28px\n`\nexport default connect(mapStateToProps, mapDispatchToProps)(Practice)\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { getCategoryDetail, resetCategoryDetail } from '../actions/content'\nimport { startPractice } from '../actions/session'\nimport styled from 'styled-components'\nimport {\n  Text\n} from 'rebass'\nimport Loading from '../components/Shared/Loading'\nimport { Button } from '../components/Shared/Elements'\nimport { useDidMountEffect } from '../utils/helpers'\nimport Select from 'react-select';\n\n\nconst mapDispatchToProps = { getCategoryDetail, startPractice, resetCategoryDetail }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst convertArrToOptions = (arr, perstem) => {\n  let options = []\n  for (let i = 0; i < arr.length; i++) {\n    options.push({\n      value: arr[i] / perstem,\n      label: arr[i]\n    })\n  }\n\n  console.log(options)\n\n  return options\n}\n\nconst PracticeTopic = (props) => {\n\n  const [numberOfQuestions, setNumberOfQuestions] = useState()\n\n  useEffect(() => {\n    props.getCategoryDetail(props.match.params.category_id, props.auth.userData.student_id)\n\n    return () => {\n      props.resetCategoryDetail()\n    }\n\n  }, [])\n\n  useDidMountEffect(() => {\n    if (props.session.currentSession) {\n      props.history.push('/session/' + props.session.currentSession.session_id)\n    }\n  }, [props.session.currentSession])\n\n  if (props.content.isFetchingCategoryDetail) return <Loading />\n  if (!props.content.categoryDetail) return null\n\n  return (\n    <Container>\n      <PreHeading>Practice Details</PreHeading>\n\n      <Header>\n        <HeaderLeft>\n          <Title>\n            {props.content.categoryDetail.details.name}\n          </Title>\n          <Text>\n            {props.content.categoryDetail.totalCompletedQuestions}/{props.content.categoryDetail.totalQuestions} Questions tested\n          </Text>\n\n          <Text style={{ color: 'rgba(0,0,0,0.3)', marginTop: '40px' }}>To practice this topic, select the number of questions you want to practice on the right.</Text>\n        </HeaderLeft>\n\n        <HeaderRight>\n          {props.content.categoryDetail.sessions.length == 0 || (props.content.categoryDetail.sessions.length > 0 && props.content.categoryDetail.sessions[0].completed) ?\n            <DropdownMenu>\n              <Text>Number of Questions</Text>\n              <Select\n                value={numberOfQuestions}\n                onChange={(selectedValue) => {\n                  setNumberOfQuestions(selectedValue)\n                }}\n                className=\"questionCountDropdown\"\n                isSearchable={false}\n                options={convertArrToOptions(\n                  props.content.categoryDetail.details.intervals,\n                  props.content.categoryDetail.details.per_stem\n                )}\n              />\n            </DropdownMenu>\n            : null}\n          {numberOfQuestions ?\n            <>\n              {props.content.categoryDetail.sessions.length == 0 ?\n                <Button\n                  type=\"primary\"\n                  color=\"orange\"\n                  label=\"Start Practice\"\n                  onClick={() => {\n                    props.startPractice(\n                      props.content.categoryDetail.details.category_id,\n                      props.content.categoryDetail.details.name,\n                      props.auth.userData.student_id,\n                      numberOfQuestions.value\n                    )\n                  }}\n                />\n                :\n                <>\n                  {props.content.categoryDetail.sessions[0].completed ?\n                    <Button\n                      type=\"primary\"\n                      color=\"orange\"\n                      label=\"Start Practice\"\n                      onClick={() => {\n                        props.startPractice(\n                          props.content.categoryDetail.details.category_id,\n                          props.content.categoryDetail.details.name,\n                          props.auth.userData.student_id,\n                          numberOfQuestions.value\n                        )\n                      }}\n                    />\n                    : null}\n                </>}\n            </>\n            : null}\n\n          {props.content.categoryDetail.sessions.length > 0 && !props.content.categoryDetail.sessions[0].completed ?\n            <Button\n              label={\"Resume Practice Session\"}\n              type=\"primary\"\n              color=\"orange\"\n              onClick={() => {\n                props.history.push(\"/session/\" + props.content.categoryDetail.sessions[0].session_id)\n              }}\n            />\n            : null}\n\n\n\n\n        </HeaderRight>\n      </Header>\n\n      <PastSessions>\n        {props.content.categoryDetail.sessions.length > 0 ?\n          <PreHeading\n            style={{ 'padding-bottom': 10 }}\n          >Past Sessions</PreHeading>\n          : null\n        }\n\n        {props.content.categoryDetail.sessions.map((session) => {\n          if (session.completed) {\n            return (\n              <Card\n                className=\"hvr-float\"\n                onClick={() => {\n                  props.history.push(`/session/${session.session_id}`)\n                }}\n                style={{\n                  cursor: 'pointer'\n                }}\n              >\n\n                <CardLeft>\n                  <CardTitle>\n                    {new Date(session.start_time[0]).toLocaleTimeString()} - {new Date(session.end_time[session.end_time.length - 1]).toLocaleTimeString()}\n                  </CardTitle>\n                  <CardSubtitle>\n                    {new Date(session.start_time[0]).toLocaleDateString()}\n                  </CardSubtitle>\n                </CardLeft>\n                <CardInfo>\n                  {session.score_breakdown[Object.keys(session.score_breakdown)[0]][0]} Correct | {session.score_breakdown[Object.keys(session.score_breakdown)[0]][2]} Partially Correct | {session.score_breakdown[Object.keys(session.score_breakdown)[0]][1]} Incorrect <br />\n                </CardInfo>\n\n              </Card>\n            )\n          }\n        })}\n      </PastSessions>\n\n    </Container >\n  )\n}\nconst PastSessions = styled.div`\n\n`\nconst CardInfo = styled.div`\n  margin-left: 20px;\n`\n\nconst CardTitle = styled.div`\n  font-family: Gilroy-SemiBold;\n  font-size: 20px;\n`\n\nconst Card = styled.div`\n  background: ${props => props.status === \"ongoing\" ? '#f89800' : 'white'};\n  color: ${props => props.status === \"ongoing\" ? 'white' : 'black'};\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.05);\n  padding: 15px 20px;\n  border-radius: 15px;\n  margin-bottom: 20px;\n  max-width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .time {\n    color: ${props => props.status === \"ongoing\" ? 'white' : '#f89800'};\n  }\n`\n\nconst Container = styled.div`\n  padding: 30px;\n  margin-left: 340px;\n`\n\nconst Sections = styled.div`\n  padding: 20px 0;\n`\n\nconst Title = styled.div`\n  font-family: Gilroy-Bold;\n  font-size: 40px;\n`\n\nconst PreHeading = styled(Text)`\n  color: rgba(0,0,0,0.3);\n  padding-bottom: 40px;\n  font-family: Gilroy-Regular;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 40px;\n`\n\nconst HeaderLeft = styled.div`\n`\n\nconst HeaderRight = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\nconst DropdownMenu = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-right: 15px;\n`\nconst CardLeft = styled.div`\n\n`\n\nconst CardSubtitle = styled.div`\n  \n`\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PracticeTopic)\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components'\nimport LogoImage from '../../assets/in2medlogo.png'\nimport { connect } from 'react-redux'\nimport { eraseCookie } from '../../utils/helpers'\nimport { logoutUser } from '../../actions/auth'\n\nconst mapDispatchToProps = { logoutUser }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst NavBar = (props) => {\n\n  const [visible, setVisible] = useState(true)\n\n  useEffect(() => {\n    if (props.location.pathname.includes(\"session\")) {\n      setVisible(false)\n    } else {\n      setVisible(true)\n    }\n  }, [props.location.pathname])\n\n  if (!visible || !props.auth.userData) return null\n\n  return (\n    <Container>\n      <Logo>\n        <img src={LogoImage} width={150} />\n      </Logo>\n\n      <UserInfo>\n        <span style={{ 'opacity': '0.7' }}>Welcome,</span>\n        <span style={{ 'font-size': '20px', 'font-weight': 'bold' }}>{props.auth.userData.display_name}</span>\n        <span\n          style={{ 'opacity': '0.7', 'text-align': 'right', 'width': '100%', 'cursor': 'pointer' }}\n          onClick={() => {\n            props.logoutUser()\n            props.setAuthenticated(false)\n          }}\n        >\n          Log Out\n        </span>\n      </UserInfo>\n\n      <Nav>\n        <NavItem\n          active={props.location.pathname === \"/\" || props.location.pathname.includes(\"exam\")}\n          onClick={() => {\n            props.history.push('/')\n          }}\n        >\n          Full Exams\n        </NavItem>\n        <NavItem\n          active={props.location.pathname.includes(\"mocks\") || props.location.pathname.includes(\"mock\")}\n          onClick={() => {\n            props.history.push('/mocks')\n          }}\n        >\n          Section Mocks\n        </NavItem>\n        <NavItem\n          active={props.location.pathname.includes(\"practice\")}\n          onClick={() => {\n            props.history.push('/practice')\n          }}\n        >\n          Practice\n        </NavItem>\n\n        {props.auth.userData.roles.includes(\"administrator\") ?\n          <NavItem\n            active={props.location.pathname.includes(\"import\")}\n            onClick={() => {\n              props.history.push('/import')\n            }}\n          >\n            Import\n          </NavItem>\n          : null}\n      </Nav>\n    </Container>\n  )\n}\n\nconst NavItem = styled.div`\n  border-radius: 15px;\n  background: ${props => props.active ? '#2ecfb0' : 'white'};\n  color: ${props => props.active ? 'white' : 'rgba(0, 0, 0, 0.5)'};\n  padding: 13px 20px;\n  margin-bottom: 15px;\n  cursor: pointer;\n  box-shadow: ${props => props.active ? '5px 5px 10px rgba(0,0,0, 0.1);' : 'none'}\n\n`\nconst Nav = styled.div`\n  padding: 40px;\n`\nconst Logo = styled.div`\n  margin: 20px 0;\n  text-align: center;\n  font-family: Gilroy-Bold;\n`\n\nconst Container = styled.div`\n  position: fixed;\n  height: 100%;\n  background: white;\n  width: 320px;\n`\n\nconst UserInfo = styled.div`\n  background: #2ECFAF;\n  padding: 40px;\n  color: white;\n  display: flex;\n  flex-direction: column\n`\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar)","import React, { useState } from 'react';\nimport { connect } from 'react-redux'\nimport { getAllExams } from '../actions/content'\nimport { AiOutlineArrowRight } from \"react-icons/ai\";\nimport { import_exam, import_questions } from \"../api/db\"\nimport styled from 'styled-components'\n\n\nconst mapDispatchToProps = { getAllExams }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst Import = (props) => {\n  const [examData, setExamData] = useState()\n  const [questionData, setQuestionData] = useState()\n\n  return (\n    <Container>\n      <Title>Import</Title>\n      <CardList>\n        <Card>\n          <CardHeading>Import Exam/Mock</CardHeading> <br />\n          <input\n            type=\"file\"\n            accept=\"application/json\"\n            onChange={async (event) => {\n              let reader = new FileReader();\n              reader.onload = (event) => {\n                let obj = JSON.parse(event.target.result);\n                setExamData(obj)\n              }\n              reader.readAsText(event.target.files[0]);\n            }}\n          />\n          <ImportButton\n            onClick={async () => {\n              if (examData) {\n                const result = await import_exam(examData)\n\n                alert(result)\n              } else {\n                alert(\"Invalid JSON.\")\n              }\n            }}\n          >\n            <AiOutlineArrowRight color=\"#f89800\" size={25} />\n          </ImportButton>\n        </Card>\n        <Card>\n          <CardHeading>Import Questions</CardHeading>\n          <input\n            type=\"file\"\n            accept=\"application/json\"\n            onChange={async (event) => {\n              let reader = new FileReader();\n              reader.onload = (event) => {\n                let obj = JSON.parse(event.target.result);\n                setQuestionData(obj)\n              }\n              reader.readAsText(event.target.files[0]);\n            }}\n          />\n          <ImportButton\n            onClick={async () => {\n              if (questionData) {\n                const result = await import_questions(questionData)\n\n                alert(result)\n              } else {\n                alert(\"Invalid JSON.\")\n              }\n            }}\n          >\n            <AiOutlineArrowRight color=\"#f89800\" size={25} />\n          </ImportButton>\n        </Card>\n      </CardList>\n    </Container>\n  )\n}\n\nconst ImportButton = styled.div`\n  display: flex;\n  width: 100%;\n  padding-top: 20px;\n  align-items: flex-end;\n  justify-content: flex-end;\n  cursor: pointer;\n`\nconst CardList = styled.div`\n  display: flex;\n  margin-top: 20px;\n  flex-wrap: wrap;\n`\nconst Title = styled.div`\n  color: rgba(0,0,0,0.25);\n  font-family: Gilroy-Regular;\n  font-size: 17px;\n  padding: 15px 0;\n`\nconst Container = styled.div`\n  padding: 30px;\n  margin-left: 340px;\n`\n\nconst CardHeading = styled.div`\n  font-family: Gilroy-Bold;\n  font-size: 22px\n`\n\nconst CardText = styled.div`\n  font-family: Gilroy-Medium;\n  font-size: 15px;\n`\n\nconst Card = styled.div`\n  background: white;\n  box-shadow: 10px 10px 20px rgba(0,0,0, 0.05);\n  padding: 20px;\n  border-radius: 15px;\n  width: 30%;\n  margin-right: 20px;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 20px;\n`\nexport default connect(mapStateToProps, mapDispatchToProps)(Import)\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport { ThemeProvider } from 'emotion-theming'\nimport theme from '@rebass/preset'\nimport { connect } from 'react-redux'\nimport { getCookie } from './utils/helpers'\n\nimport Home from './screens/Home'\nimport Exam from './screens/Exam'\nimport Session from './screens/Session'\nimport Login from './screens/Login'\nimport Practice from './screens/Practice'\nimport PracticeTopic from './screens/PracticeTopic'\n\nimport NavBar from './components/Header/NavBar'\nimport Loading from './components/Shared/Loading'\n\nimport { getUser } from './actions/auth'\n\nimport Import from './screens/Import';\nimport { HotKeys } from \"react-hotkeys\";\n\nconst mapDispatchToProps = { getUser }\n\nconst mapStateToProps = (state) => {\n  return state\n}\n\nconst App = (props) => {\n  const [authenticated, setAuthenticated] = useState(false)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n\n    const token = getCookie(\"jwt\")\n\n    if (token) {\n      props.getUser()\n      setAuthenticated(true)\n    }\n\n    setLoading(false)\n  }, [])\n\n\n  if (loading) {\n    return <Loading />\n  }\n\n  return (\n\n    <ThemeProvider theme={theme}>\n      <div id=\"root\">\n        <Router>\n          {authenticated ?\n            <>\n              <Route render={(props) => <NavBar {...props} setAuthenticated={setAuthenticated} />} />\n              <Switch>\n                <Route path={'/session/:session_id'} component={Session} />\n                <Route path={'/exam/:structure_id'} component={Exam} />\n                <Route path={'/mock/:structure_id'} component={Exam} />\n                <Route path={'/practice/:category_id'} component={PracticeTopic} />\n                <Route path='/practice' component={Practice} />\n                <Route path='/import' component={Import} />\n                <Route path='/mocks' render={(props) => <Home {...props} type={\"Mock\"} />} />\n                <Route path='/' render={(props) => <Home {...props} type={\"Exam\"} />} />\n              </Switch>\n            </>\n            :\n            <>\n              <Route render={(props) => <Login {...props} setAuthenticated={setAuthenticated} />} />\n            </>\n          }\n        </Router>\n      </div>\n\n    </ThemeProvider>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport './App.css'\nimport './assets/hover-min.css'\nimport App from './App';\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\n\nReactDOM.render(\n  <Provider store={store}>\n    <DndProvider backend={HTML5Backend}>\n      <App />\n    </DndProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/in2medlogo.d28a7037.png\";"],"sourceRoot":""}